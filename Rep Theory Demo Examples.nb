(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    212001,       5039]
NotebookOptionsPosition[    200838,       4878]
NotebookOutlinePosition[    201286,       4896]
CellTagsIndexPosition[    201243,       4893]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Exploring Representation Theory and Quantum information", "Title",ExpressionUUID->"07d1e98e-6a65-4f41-b400-811e7c3e813b"],

Cell["\<\
\"The law of comparative advantage says that\[NonBreakingSpace] the more \
different you are from other people,\[NonBreakingSpace]the more valuable you \
are economically.\" - David Deutsch \
\>", "Text",ExpressionUUID->"04ad0cfa-f320-4c6f-bbb6-cbf70e1c4fa7"],

Cell["\<\
Inspired by a course on algorithms, many, many discussions with a physicist \
(also a partner) and an elegant explanation of why  infinite-dimensional \
fields of QFT are necessary, I developed interest in this field and sought to \
create a notebook for building an understanding of representation theory in \
quantum information\
\>", "Text",ExpressionUUID->"1ce33882-5491-4b0c-88a5-436ef9afdb46"],

Cell[CellGroupData[{

Cell["Representation theory introduction", "Chapter",ExpressionUUID->"0e2c797c-9db7-43d6-959b-ab79d23472fe"],

Cell["\<\
Representation has lots of interesting things: as quantum information \
theorists, perhaps few things would be more interesting that the Schur-Weyl \
duality. This arises due to a neat fact that a \"vector space can be \
interpreted either as a representation of a group or as state-space of a \
quantum system\" [AW. Harrow].  In this section, we will explore some basics \
through code and get a feel of the field. Note: This notebook follows the \
structure and definitions from [AW. Harrow].\
\>", "Text",ExpressionUUID->"c2c00343-d802-48f8-a355-3ba7b02b5354"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basics 1. Understanding representations", "Subtitle",ExpressionUUID->"5b908bef-764d-490c-aab2-9af06a59da44"],

Cell["\<\
For a complex vector space\[NonBreakingSpace]V\[NonBreakingSpace], we can \
define an endomorphism End(V)\[NonBreakingSpace], that is, a set of linear \
maps from\[NonBreakingSpace]V\[NonBreakingSpace]to itself. A representation \
of a group\[NonBreakingSpace]G\[NonBreakingSpace]is a vector space\
\[NonBreakingSpace]V\[NonBreakingSpace]together with a homomorphism from\
\[NonBreakingSpace]G\[NonBreakingSpace]to End(V\[NonBreakingSpace]). \
Homomorphism is a fancy way of saying that this map is a function\
\[NonBreakingSpace]R\[NonBreakingSpace]:\[NonBreakingSpace]G\
\[NonBreakingSpace]\[RightArrow]\[NonBreakingSpace]End(V\[NonBreakingSpace]) \
such that\[NonBreakingSpace]R(g1)R(g2) =\[NonBreakingSpace]R(g1g2). If\
\[NonBreakingSpace]R(g) is a unitary operator for all\[NonBreakingSpace]g, \
then we say\[NonBreakingSpace]R\[NonBreakingSpace]is a unitary \
representation. A note on endomorphisms: They need not span the entire space, \
they should be linear and be defined for the entire vector space. 
\
\>", "Text",ExpressionUUID->"020a72cd-26a2-47d1-8110-ceec3b0558ea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"d", " ", "=", " ", "3"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"dim", " ", "V"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "R", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"basisV", " ", "=", " ", 
    RowBox[{"IdentityMatrix", "[", "d", "]"}]}], ";"}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"columns", " ", "are", " ", "basis", " ", "vectors", " ", "e1"}], 
    ",", "e2", ",", "e3"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EM", "[", 
     RowBox[{"i_", ",", " ", "j_"}], "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "j"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"d", ",", " ", "d"}], "}"}]}], "]"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Endomorphism", " ", "basis"}], ",", " ", 
    RowBox[{"E_ij", " ", "has", " ", "a", " ", "1", " ", "at", " ", 
     RowBox[{"(", 
      RowBox[{"i", ",", "j"}], ")"}]}], ",", " ", 
    RowBox[{
     RowBox[{"0", " ", "else"}], " ", "-", " ", 
     RowBox[{
     "standard", " ", "definition", " ", "but", " ", "something", " ", "else",
       " ", "could", " ", "have", " ", "been", " ", "used"}]}]}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"basisEndV", " ", "=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"EM", "[", 
         RowBox[{"i", ",", " ", "j"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "d"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "d"}], "}"}]}], "]"}], ",", " ", "1"}], 
     "]"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Check", " ", "the", " ", "size", " ", "of", " ", "these", " ", "bases"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"dimV", " ", "=", " ", "d"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dimEndV", " ", "=", " ", 
    RowBox[{"Length", "[", "basisEndV", "]"}]}], ";"}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"should", " ", "be", " ", 
    RowBox[{"d", "^", "2"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"dimV", ",", " ", "dimEndV"}], "}"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Reconstruct", " ", "any", " ", "linear", " ", "map", " ", "A", " ", "in", 
    " ", "End", 
    RowBox[{"(", "V", ")"}], " ", "from", " ", "the", " ", "E_ij", " ", 
    "basis"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"RandomComplex", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"d", ",", " ", "d"}], "}"}]}], "]"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"a", " ", "random", " ", "endomorphism"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"reconstructA", " ", "=", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"A", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", 
      RowBox[{"EM", "[", 
       RowBox[{"i", ",", " ", "j"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "d"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "d"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"reconstructA", " ", "==", " ", "A"}], "]"}], "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"True", ":", " ", 
    RowBox[{"the", " ", 
     RowBox[{"{", "E_ij", "}"}], " ", "form", " ", "a", " ", "basis", " ", 
     "of", " ", "End", 
     RowBox[{"(", "V", ")"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"G", " ", "=", " ", 
   RowBox[{"SymmetricGroup", "[", "3", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"elems", " ", "=", " ", 
   RowBox[{"GroupElements", "[", "G", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"toList", "[", "g_", "]"}], " ", ":=", " ", 
   RowBox[{"PermutationList", "[", 
    RowBox[{"g", ",", " ", "d"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"compose", "[", 
     RowBox[{"p_", ",", " ", "q_"}], "]"}], " ", ":=", " ", 
    RowBox[{"p", "[", 
     RowBox[{"[", "q", "]"}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Representation", " ", "map", " ", 
     RowBox[{"R", ":", " ", 
      RowBox[{"permutation", " ", "list"}]}]}], " ", "->", " ", 
    RowBox[{"permutation", " ", "matrix", " ", 
     RowBox[{"(", 
      RowBox[{"d", " ", "x", " ", "d"}], ")"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"R", "[", "p_List", "]"}], " ", ":=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"j", " ", "==", " ", 
         RowBox[{"p", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", "1", ",", " ", "0"}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "d"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "d"}], "}"}]}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Check", " ", "the", " ", "homomorphism", " ", 
     RowBox[{"property", ":", " ", 
      RowBox[{"R", 
       RowBox[{"(", 
        RowBox[{"g1", " ", "g2"}], ")"}]}]}]}], " ", "=", " ", 
    RowBox[{"R", 
     RowBox[{"(", "g1", ")"}], " ", "R", 
     RowBox[{"(", "g2", ")"}]}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"permLists", "=", 
   RowBox[{"toList", "/@", 
    RowBox[{"GroupElements", "[", 
     RowBox[{"SymmetricGroup", "[", "d", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testPairs", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"permLists", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"permLists", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "permLists", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "permLists", "]"}]}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"homomorphismChecks", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"pair", ",", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{"pair", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"q", "=", 
            RowBox[{"pair", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"R", "[", 
            RowBox[{"compose", "[", 
             RowBox[{"p", ",", "q"}], "]"}], "]"}], "===", 
           RowBox[{
            RowBox[{"R", "[", "p", "]"}], ".", 
            RowBox[{"R", "[", "q", "]"}]}]}], "]"}]}], "]"}]}], "]"}], ",", 
     "testPairs"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AllTrue", "[", 
   RowBox[{"homomorphismChecks", ",", "TrueQ"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"idPerm", "=", 
   RowBox[{"Range", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"idCheck", "=", 
   RowBox[{
    RowBox[{"R", "[", "idPerm", "]"}], "===", 
    RowBox[{"IdentityMatrix", "[", "d", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"inverseCheck", "=", 
   RowBox[{"AllTrue", "[", 
    RowBox[{"permLists", ",", 
     RowBox[{"Function", "[", 
      RowBox[{"p", ",", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"inv", "=", 
           RowBox[{"Ordering", "[", "p", "]"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"R", "[", "inv", "]"}], ".", 
            RowBox[{"R", "[", "p", "]"}]}], "===", 
           RowBox[{"IdentityMatrix", "[", "d", "]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{"R", "[", "p", "]"}], ".", 
            RowBox[{"R", "[", "inv", "]"}]}], "===", 
           RowBox[{"IdentityMatrix", "[", "d", "]"}]}]}]}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"idCheck", ",", "inverseCheck"}], "}"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ConjugateTranspose", "[", 
    RowBox[{"R", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "1"}], "}"}], "]"}], "]"}], ".", 
   RowBox[{"R", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "1"}], "}"}], "]"}]}], " ", "===", " ", 
  RowBox[{"IdentityMatrix", "[", "d", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryQ", "[", "m_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "m", "]"}], ".", "m"}], " ", "===", 
    " ", 
    RowBox[{"IdentityMatrix", "[", 
     RowBox[{"Length", "[", "m", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"unitaryChecks", " ", "=", " ", 
   RowBox[{"unitaryQ", " ", "/@", " ", 
    RowBox[{"(", 
     RowBox[{"R", " ", "/@", " ", "permLists"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"AllTrue", "[", 
  RowBox[{"unitaryChecks", ",", " ", "TrueQ"}], "]"}]}], "Input",ExpressionUUI\
D->"e9e513ee-222a-48aa-a46d-a5f6af732de5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "9"}], "}"}]], "Output",
 CellLabel->
  "Out[1008]= ",ExpressionUUID->"26b50e4f-ca9a-42c1-84cd-69476e770745"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1011]= ",ExpressionUUID->"69949a31-65de-4025-8719-b67165a527bb"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1025]= ",ExpressionUUID->"7ec7c858-d1e6-43f7-9eb0-cee7b61634fd"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1028]= ",ExpressionUUID->"239647ef-886d-43ab-ae99-b18a4f5a4c91"]
}, Open  ]],

Cell["\<\
Now let us say you have two vector spaces\[NonBreakingSpace]V1\
\[NonBreakingSpace]and\[NonBreakingSpace]V2, then we can define a \
homomorphism Hom(V1,V2) to be the set of linear transformations from\
\[NonBreakingSpace]V1\[NonBreakingSpace]to\[NonBreakingSpace]V2. Let us say \
that we have a group G\[NonBreakingSpace]that acts on\[NonBreakingSpace]V1\
\[NonBreakingSpace]and\[NonBreakingSpace]V2\[NonBreakingSpace]with \
representation matrices\[NonBreakingSpace]R1\[NonBreakingSpace]and\
\[NonBreakingSpace]R2\[NonBreakingSpace](i.e. different homomorphisms as \
discussed above in the definition of representations). We can ask how would \
the group G then act on the Hom(V1,V2) itself, that is, we want to define a \
representation of G on the space Hom(V1, V2). as we already know, a \
representation itself is an homomorphism, meaning that that two below actions \
should be equivalent : 

1) moving a vector in V1 under action of G via R1 and then applying a \
transformation M \[Element] Hom(V1,V2) 
2) Applying transformation M and then moving output vector from V2 under the \
action of G via R2

Through this equivalence we see that the representation of the group G on \
Hom(V1, V2) is given by the map from\[NonBreakingSpace]M\[NonBreakingSpace]to\
\[NonBreakingSpace]R2(g)MR1(g)^\[Minus]1\[NonBreakingSpace]for any\
\[NonBreakingSpace]M\[NonBreakingSpace]\[Element]\[NonBreakingSpace]Hom(V1, \
V2). 

Now, for any representation (R, V\[NonBreakingSpace], we define\
\[NonBreakingSpace]V_G\[NonBreakingSpace]to be the space \
of\[NonBreakingSpace]G-invariant vectors of\[NonBreakingSpace]V\
\[NonBreakingSpace]: i.e.\[NonBreakingSpace]V_G\[NonBreakingSpace]:=\
\[NonBreakingSpace]{|v\:27e9 \
\[Element]\[NonBreakingSpace]V\[NonBreakingSpace]:\[NonBreakingSpace]R(g)|v\
\:27e9\[NonBreakingSpace]=\[NonBreakingSpace]|v\:27e9 \[ForAll]g\
\[NonBreakingSpace]\[Element]\[NonBreakingSpace]G}. Of particular interest is \
the space Hom(V1, V2)_G, which can be thought of as the linear maps from\
\[NonBreakingSpace]V1\[NonBreakingSpace]to\[NonBreakingSpace]V2\
\[NonBreakingSpace]which commute with the action of\[NonBreakingSpace]G. \
Formally, this means M\[SmallCircle]R_1(g)=R_2(g)\[SmallCircle]M
If Hom(V1,V2)G\[NonBreakingSpace]contains any invertible maps (or \
equivalently, any unitary maps) then we say that (R1, V1) and (R2, V2) are\
\[NonBreakingSpace]equivalent\[NonBreakingSpace]representations. 

To be clearer, assume you have an M such that g.M=M, such an invariant M is \
called an intertwiner. we already know from previous para that g.M = \
R2(g)MR1(g)^\[Minus]1 = M -> R2M=MR1, of course for this we should also be \
able to write R2=MR1M^-1 and hence M has to be invertible! 

In the below code snippet, I visualize the definitions above for addition mod \
2 group. I show two representations\[NonBreakingSpace]R1\:200b\
\[NonBreakingSpace]and\[NonBreakingSpace]R2\:200b\[NonBreakingSpace]on\
\[NonBreakingSpace]C2\[NonBreakingSpace]are related by an intertwiner. The \
code checks that both\[NonBreakingSpace]R1\:200b\[NonBreakingSpace](a \
reflection) and\[NonBreakingSpace]R2\:200b\[NonBreakingSpace](a swap) are \
valid representations, constructs the canonical group action on\
\[NonBreakingSpace]Hom(V1\:200b,V2\:200b), solves for invariant maps\
\[NonBreakingSpace]M\[NonBreakingSpace]satisfying R2\:200b(g)M=MR1\:200b(g), \
and finds an invertible intertwiner\[NonBreakingSpace]T showing the two \
representations are equivalent. Finally, it identifies each representation\
\[CloseCurlyQuote]s invariant subspace and confirms that\[NonBreakingSpace]T \
maps one invariant line to the other, preserving the group symmetry.\
\>", "Text",ExpressionUUID->"765c8b71-dbfc-4b42-8a1c-aec6a409841b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"-", " ", 
       RowBox[{"Setup", ":", " ", 
        RowBox[{"the", " ", "group", " ", "G"}]}]}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e", ",", " ", "g"}], "}"}], " ", "--"}], "--"}], "-"}]}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{"R1", ",", " ", "R2", ",", " ", "g", ",", " ", "e"}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"d", " ", "=", " ", "2"}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"dimension", " ", "of", " ", "V1"}], ",", " ", "V2"}], " ", 
    "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Two", " ", "representations", " ", "R1", " ", "and", " ", "R2", " ", 
     "of", " ", "G", " ", "on", " ", 
     RowBox[{"C", "^", "2"}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"R1", 
      RowBox[{"(", "g", ")"}]}], " ", "=", " ", 
     RowBox[{"diag", 
      RowBox[{"(", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"reflection", " ", "in", " ", "2", "nd", " ", "coordinate"}], 
       ")"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"R1", "[", "e", "]"}], " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "d", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"R1", "[", "g", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"R2", 
      RowBox[{"(", "g", ")"}]}], " ", "=", " ", 
     RowBox[{"Swap", " ", "matrix", " ", 
      RowBox[{"(", 
       RowBox[{"permutes", " ", "the", " ", "two", " ", "coordinates"}], 
       ")"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"R2", "[", "e", "]"}], " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "d", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"R2", "[", "g", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Check", ":", " ", 
     RowBox[{
     "both", " ", "are", " ", "homomorphisms", " ", "of", " ", "groups"}]}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"R1", "[", "g", "]"}], ".", 
     RowBox[{"R1", "[", "g", "]"}]}], " ", "===", " ", 
    RowBox[{"R1", "[", "e", "]"}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"R2", "[", "g", "]"}], ".", 
     RowBox[{"R2", "[", "g", "]"}]}], " ", "===", " ", 
    RowBox[{"R2", "[", "e", "]"}]}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"-", " ", "Canonical"}]}]}], " ", "action", " ", "of", " ", 
      "G", " ", "on", " ", "Hom", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"V1", ",", "V2"}], ")"}], " ", "--"}], "--"}]}], "-"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{"a", ",", " ", "b", ",", " ", "c", ",", " ", "dM"}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"M", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", " ", "b"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"c", ",", " ", "dM"}], "}"}]}], "}"}]}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"generic", " ", "linear", " ", "map", " ", "V1"}], " ", "->", 
     " ", "V2"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"canonical", " ", 
      RowBox[{"action", ":", " ", 
       RowBox[{"g", "\[CenterDot]", "M"}]}]}], " ", "=", " ", 
     RowBox[{"R2", 
      RowBox[{"(", "g", ")"}], " ", "M", " ", "R1", 
      RowBox[{
       RowBox[{"(", "g", ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"act", "[", 
      RowBox[{"e_", ",", " ", "X_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"R2", "[", "e", "]"}], ".", "X", ".", 
      RowBox[{"Inverse", "[", 
       RowBox[{"R1", "[", "e", "]"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"act", "[", 
      RowBox[{"g_", ",", " ", "X_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"R2", "[", "g", "]"}], ".", "X", ".", 
      RowBox[{"Inverse", "[", 
       RowBox[{"R1", "[", "g", "]"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"compute", " ", 
     RowBox[{"g", "\[CenterDot]", "M"}], " ", "explicitly"}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"gActM", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{"act", "[", 
       RowBox[{"g", ",", " ", "M"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"gActM", " ", "//", " ", "MatrixForm"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"-", " ", "Solve"}]}]}], " ", "for", " ", 
     RowBox[{"intertwiners", ":", " ", 
      RowBox[{
       RowBox[{"R2", 
        RowBox[{"(", "g", ")"}], " ", "M"}], " ", "==", " ", 
       RowBox[{
        RowBox[{"M", " ", "R1", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "g", ")"}], " ", "--"}], "--"}]}], "-"}]}]}]}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"eqs", " ", "=", " ", 
     RowBox[{"Thread", "[", 
      RowBox[{"gActM", " ", "==", " ", "M"}], "]"}]}], ";"}], 
   "                 ", 
   RowBox[{"(*", " ", 
    RowBox[{"elementwise", " ", "equations"}], " ", "*)"}], "\n", 
   RowBox[{"sol", " ", "=", " ", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "eqs", "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"a", ",", " ", "b", ",", " ", "c", ",", " ", "dM"}], "}"}]}], 
     "]"}]}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"parameterization", " ", "of", " ", "all", " ", "intertwiners"}], 
    " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"general", " ", "G"}], "-", 
     RowBox[{"invariant", " ", "map", " ", "M", " ", 
      RowBox[{"(", 
       RowBox[{"Hom", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"V1", ",", "V2"}], ")"}], "^", "G"}]}], ")"}]}]}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Mint", "[", 
      RowBox[{"a_", ",", " ", "b_"}], "]"}], " ", ":=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", " ", "b"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"a", ",", " ", 
         RowBox[{"-", "b"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Mint", "[", 
     RowBox[{"a", ",", " ", "b"}], "]"}], " ", "//", " ", "MatrixForm"}], 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "determinant", " ", "of", " ", "M", " ", "to", " ", "check", " ", 
     "invertibility"}], " ", "*)"}], "\n", 
   RowBox[{"Det", "[", 
    RowBox[{"Mint", "[", 
     RowBox[{"a", ",", "b"}], "]"}], "]"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"=", " ", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "a", " ", "b"}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "pick", " ", "a", " ", "concrete", " ", "invertible", " ", 
      "intertwiner"}], ",", " ", 
     RowBox[{"e", ".", "g", "."}], ",", " ", 
     RowBox[{"a", "=", "1"}], ",", " ", 
     RowBox[{"b", "=", "1"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"T", " ", "=", " ", 
     RowBox[{"Mint", "[", 
      RowBox[{"1", ",", " ", "1"}], "]"}]}], ";"}], "\n", 
   RowBox[{"Det", "[", "T", "]"}], "            ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"should", " ", "be"}], " ", "-", "2"}], " ", "\[NotEqual]", 
      " ", "0"}], ",", " ", 
     RowBox[{"so", " ", "invertible"}]}], " ", "*)"}], "\n", 
   RowBox[{"T", " ", "//", " ", "MatrixForm"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"verify", " ", "intertwining", " ", "condition", " ", "R2", 
      RowBox[{"(", "g", ")"}], " ", "T"}], " ", "==", " ", 
     RowBox[{"T", " ", "R1", 
      RowBox[{"(", "g", ")"}]}]}], " ", "*)"}], "\n", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"R2", "[", "g", "]"}], ".", "T"}], " ", "==", " ", 
     RowBox[{"T", ".", 
      RowBox[{"R1", "[", "g", "]"}]}]}], "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"prove", " ", 
     RowBox[{"equivalence", ":", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"T", "^", 
         RowBox[{"{", 
          RowBox[{"-", "1"}], "}"}]}], " ", "R2", 
        RowBox[{"(", "g", ")"}], " ", "T"}], " ", "==", " ", 
       RowBox[{"R1", 
        RowBox[{"(", "g", ")"}], " ", "for", " ", "all", " ", "g"}]}]}]}], 
    " ", "*)"}], "\n", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Inverse", "[", "T", "]"}], ".", 
      RowBox[{"R2", "[", "g", "]"}], ".", "T"}], " ", "==", " ", 
     RowBox[{"R1", "[", "g", "]"}]}], "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"-", " ", "Invariant"}]}]}], " ", "subspaces", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"V", "^", "G"}], ")"}], " ", "--"}], "--"}]}], "-"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{"x", ",", " ", "y"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"v", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y"}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Invariants", " ", "in", " ", 
     RowBox[{"V1", ":", " ", 
      RowBox[{
       RowBox[{"R1", 
        RowBox[{"(", "g", ")"}], " ", "v"}], " ", "==", " ", "v"}]}]}], " ", 
    "*)"}], "\n", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"R1", "[", "g", "]"}], ".", "v"}], " ", "==", " ", "v"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y"}], "}"}]}], "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"=", 
     RowBox[{
      RowBox[{">", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", " ", "arbitrary"}], ",", " ", 
          RowBox[{"y", " ", "=", " ", "0"}]}], "}"}], " ", "so", " ", 
        RowBox[{"V1", "^", "G"}]}]}], " ", "=", " ", 
      RowBox[{"span", 
       RowBox[{"{", 
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}], "}"}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Invariants", " ", "in", " ", 
     RowBox[{"V2", ":", " ", 
      RowBox[{
       RowBox[{"R2", 
        RowBox[{"(", "g", ")"}], " ", "v"}], " ", "==", " ", "v"}]}]}], " ", 
    "*)"}], "\n", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"R2", "[", "g", "]"}], ".", "v"}], " ", "==", " ", "v"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y"}], "}"}]}], "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"=", 
      RowBox[{">", " ", 
       RowBox[{"{", 
        RowBox[{"x", " ", "=", " ", "y"}], "}"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"so", " ", 
       RowBox[{"V2", "^", "G"}]}], " ", "=", " ", 
      RowBox[{"span", 
       RowBox[{"{", 
        RowBox[{"(", 
         RowBox[{"1", ",", "1"}], ")"}], "}"}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Check", " ", "T", " ", "maps", " ", "invariant", " ", "line", " ", "in", 
     " ", "V1", " ", "to", " ", "invariant", " ", "line", " ", "in", " ", 
     "V2", " ", 
     RowBox[{"(", 
      RowBox[{"as", " ", "expected"}], ")"}]}], " ", "*)"}], "\n", 
   RowBox[{"T", ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "0"}], "}"}]}], "\n"}]}]], "Input",ExpressionUUID->\
"11112b0e-84d9-43d5-8ac3-62ae073e4139"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1079]= ",ExpressionUUID->"644883b3-3307-4aee-9cdb-5e0416af1833"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1080]= ",ExpressionUUID->"95ddce5c-f8da-43cc-8ad4-899b4d69d6fb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      ItemBox["c"], 
      ItemBox[
       RowBox[{"-", "dM"}]]},
     {
      ItemBox["a"], 
      ItemBox[
       RowBox[{"-", "b"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[1086]//MatrixForm= \
",ExpressionUUID->"081d10c3-0795-4de5-aba2-7ed1b71bb0d6"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"", 2,
    1088, 17, 34507093071123859094, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "MSG", \
"Message",ExpressionUUID->"e0487496-35c0-4df5-b370-98ba50f6c105"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "a"}], ",", 
    RowBox[{"dM", "\[Rule]", 
     RowBox[{"-", "b"}]}]}], "}"}], "}"}]], "Output",
 CellLabel->
  "Out[1088]= ",ExpressionUUID->"e371e7a9-e7ae-459a-8727-36a1db2af8f8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      ItemBox["a"], 
      ItemBox["b"]},
     {
      ItemBox["a"], 
      ItemBox[
       RowBox[{"-", "b"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[1090]//MatrixForm= \
",ExpressionUUID->"ac48936d-436a-44b3-a001-ce4793a83fc8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "a", " ", "b"}]], "Output",
 CellLabel->
  "Out[1091]= ",ExpressionUUID->"9d596689-984b-493b-9418-4a20c0098cb0"],

Cell[BoxData[
 RowBox[{"-", "2"}]], "Output",
 CellLabel->
  "Out[1093]= ",ExpressionUUID->"77d4dfe5-377e-4376-a198-75e0c50a322c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      ItemBox["1"], 
      ItemBox["1"]},
     {
      ItemBox["1"], 
      ItemBox[
       RowBox[{"-", "1"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[1094]//MatrixForm= \
",ExpressionUUID->"a9b17d9e-cd08-4d78-a799-37335e7dc04e"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1095]= ",ExpressionUUID->"1df0a098-128c-4026-aaa6-dcae4c746a6d"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1096]= ",ExpressionUUID->"dfb7474f-1e1f-4fb2-9a3d-60de6ad4c883"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"", 2,
    1099, 18, 34507093071123859094, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "MSG", \
"Message",ExpressionUUID->"3040c644-fb40-4f8c-b5b7-8462021729a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", "0"}], "}"}], "}"}]], "Output",
 CellLabel->
  "Out[1099]= ",ExpressionUUID->"694c05ee-05e2-4718-9563-466165d9cf8d"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"", 2,
    1100, 19, 34507093071123859094, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "MSG", \
"Message",ExpressionUUID->"006f9bd6-8663-4e20-a1c4-c66ef59ca456"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", "x"}], "}"}], "}"}]], "Output",
 CellLabel->
  "Out[1100]= ",ExpressionUUID->"516f784f-cc54-44bf-9c00-aade99cfed9a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "Output",
 CellLabel->
  "Out[1101]= ",ExpressionUUID->"35e6fc08-85ea-40c0-a7d1-ad7730622272"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Pick", " ", "symbolic", " ", "intertwiner", " ", "M"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"M0", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", " ", "b"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"a", ",", " ", 
         RowBox[{"-", "b"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Check", " ", "invariance", " ", "under", " ", "group", " ", "action"}], 
    " ", "*)"}], "\n", 
   RowBox[{"Simplify", "[", " ", 
    RowBox[{
     RowBox[{"act", "[", 
      RowBox[{"g", ",", " ", "M0"}], "]"}], " ", "==", " ", "M0"}], " ", 
    "]"}]}]}]], "Input",ExpressionUUID->"51c0198b-2bc6-4bf2-904f-\
a0d699a565ec"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1103]= ",ExpressionUUID->"330c3c1b-1e16-4263-85b8-740a78eb2b75"]
}, Open  ]],

Cell["\<\
In the below code, we do the same as above but for SU(2) group (do not ask \
why I thought this was worth doing - its really not that hard to extend your \
understanding from discrete to continuos groups, but hey, there's no harm in \
a few extra lines of redundancy!). To recall, we are setting up and\
\[NonBreakingSpace]displaying\[NonBreakingSpace]the intertwining condition \
that defines G-equivariant (intertwining maps\[NonBreakingSpace]R2=MR1M^-1) \
The first two\[NonBreakingSpace]Print\[NonBreakingSpace]lines are just \
explanatory text: rememeber the\[NonBreakingSpace]canonical action\
\[NonBreakingSpace]of\[NonBreakingSpace]G\[NonBreakingSpace]on\
\[NonBreakingSpace]Hom(V1\:200b,V2\:200b)\[NonBreakingSpace]is\
\[NonBreakingSpace]M\[RightTeeArrow]R2(g)MR1(g)^\[Minus]. M is G-invariant\
\[NonBreakingSpace](an intertwiner) exactly \
when\[NonBreakingSpace]R2\:200bM=MR1\:200b. The \
expression\[NonBreakingSpace]invarianceEq\[NonBreakingSpace]is the symbolic \
matrix\[NonBreakingSpace]R2\:200bM\[Minus]MR1. invarianceEq // MatrixForm\
\[NonBreakingSpace]merely\[NonBreakingSpace]shows\[NonBreakingSpace]this \
residual so you can see the equations entry-by-entry. The actual mathematical \
check happens when you set those entries to zero and solve for the unknowns. \
Any solution matrix\[NonBreakingSpace]M\[NonBreakingSpace]produced there \
satisfies\[NonBreakingSpace]R2\:200bM=MR1\:200b; if one such\
\[NonBreakingSpace]M\[NonBreakingSpace]is invertible, the code has exhibited \
an equivalence between the two representations. Formally, this means that \
there exists a unitary change of \
basis\[NonBreakingSpace]U\[NonBreakingSpace]:\[NonBreakingSpace]V1\
\[NonBreakingSpace]\[RightArrow]\[NonBreakingSpace]V2\[NonBreakingSpace]such \
that for any\[NonBreakingSpace]g\[NonBreakingSpace]\[Element]\
\[NonBreakingSpace]G,\[NonBreakingSpace]UR1(g)U\[Dagger]\[NonBreakingSpace]=\
\[NonBreakingSpace]R2(g).
\
\>", "Text",ExpressionUUID->"8755a9ab-5cdd-497d-aa63-01391e09ad51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "Pauli", " ", "matrices"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]x", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]y", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", 
         RowBox[{"-", "I"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"I", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]z", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Define", " ", "the", " ", "SU", 
     RowBox[{"(", "2", ")"}], " ", "rotation", " ", "operator"}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"R", "[", 
      RowBox[{"n_", ",", " ", "\[Theta]_"}], "]"}], " ", ":=", " ", 
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{"-", "I"}], " ", 
       RowBox[{"\[Theta]", "/", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "\[Sigma]x"}], " ", "+", " ", 
         
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "\[Sigma]y"}], " ", "+", " ", 
         
         RowBox[{
          RowBox[{"n", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "\[Sigma]z"}]}], ")"}]}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Choose", " ", "a", " ", "group", " ", 
     RowBox[{"element", ":", " ", 
      RowBox[{
      "rotation", " ", "by", " ", "\[Theta]", " ", "around", " ", "axis", " ",
        "n"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"n", " ", "=", " ", 
     RowBox[{"Normalize", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"\[Theta]", " ", "=", " ", 
     RowBox[{"Pi", "/", "3"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Representations", " ", "on", " ", "V1", " ", "and", " ", "V2"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"R1", " ", "=", " ", 
     RowBox[{"R", "[", 
      RowBox[{"n", ",", " ", "\[Theta]"}], "]"}]}], ";"}], 
   "                     ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Representation", " ", "on", " ", "V1"}], " ", "=", " ", 
     RowBox[{"\:2102", "^", "2"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"R2", " ", "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}], ".", 
      RowBox[{"R", "[", 
       RowBox[{"n", ",", " ", "\[Theta]"}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}]}], ";"}], "   ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "You", " ", "can", " ", "pick", " ", "any", " ", "R2", " ", "you", " ", 
      "want"}], ",", " ", 
     RowBox[{
      RowBox[{"e", ".", "g", ".", " ", "same"}], " ", "as", " ", "R1"}]}], 
    " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"For", " ", "nontrivial", " ", 
      RowBox[{"example", ":", " ", "R2"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"S", ".", "R1", ".", "Sinv"}], " ", "where", " ", "S", " ", 
      "is", " ", "change", " ", "of", " ", "basis"}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Define", " ", "S"}], ",", " ", 
     RowBox[{
     "Sinv", " ", "to", " ", "build", " ", "an", " ", "equivalent", " ", 
      "representation"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"S", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Sinv", " ", "=", " ", 
     RowBox[{"Inverse", "[", "S", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"R2", " ", "=", " ", 
     RowBox[{"S", ".", "R1", ".", "Sinv"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Define", " ", "the", " ", "space", " ", "Hom", 
      RowBox[{"(", 
       RowBox[{"V1", ",", "V2"}], ")"}]}], ":", " ", 
     RowBox[{"matrices", " ", "of", " ", "shape", " ", "dim", 
      RowBox[{"(", "V2", ")"}], "\[Times]", "dim", 
      RowBox[{"(", "V1", ")"}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"An", " ", "arbitrary", " ", "linear", " ", "map", " ", "M"}], 
     " ", "\[Element]", " ", 
     RowBox[{"Hom", 
      RowBox[{"(", 
       RowBox[{"V1", ",", "V2"}], ")"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"M", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{"m", ",", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "2"}], "}"}]}], "]"}]}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"m11", ",", " ", "m12", ",", " ", "m21", ",", " ", 
     RowBox[{"m22", " ", "symbolic", " ", "entries"}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Canonical", " ", "action", " ", "of", " ", "G", " ", "on", " ", "M"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ActionOnM", "[", "g_", "]"}], " ", ":=", " ", 
     RowBox[{"R2", ".", "M", ".", 
      RowBox[{"Inverse", "[", "R1", "]"}]}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Intertwining", " ", 
     RowBox[{"condition", ":", " ", 
      RowBox[{
       RowBox[{"M", " ", "invariant", " ", "under", " ", "G"}], "-", 
       "action"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"invarianceEq", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Chop", "[", 
       RowBox[{
        RowBox[{"ActionOnM", "[", "g", "]"}], " ", "-", " ", "M"}], "]"}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Canonical action of G on Hom(V1,V2): M \[RightArrow] R2 M R1^{-1}\>\
\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<Check for G-invariance: R2 M = M R1\>\"", "]"}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Symbolic condition:\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"invarianceEq", " ", "//", " ", "MatrixForm"}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Solve", " ", "for", " ", "all", " ", "M", " ", "that", " ", "satisfy", 
      " ", "R2", " ", "M"}], " ", "=", " ", 
     RowBox[{"M", " ", "R1"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"sol", " ", "=", " ", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "invarianceEq", "]"}], " ", "==", " ", "0"}],
         "]"}], ",", " ", 
       RowBox[{"Flatten", "[", "M", "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<G-invariant intertwiners M:\>\"", "]"}], ";"}],
    "\n", 
   RowBox[{"TableForm", "[", "sol", "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"If", " ", "an", " ", "invertible", " ", "M", " ", "exists"}], 
     ",", " ", 
     RowBox[{
     "the", " ", "two", " ", "representations", " ", "are", " ", 
      "equivalent"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"sol", " ", "=!=", " ", 
       RowBox[{"{", "}"}]}], ",", " ", 
      RowBox[{
      "Print", "[", 
       "\"\<\[DoubleRightArrow] There exists a nonzero (possibly invertible) \
intertwiner \[RightArrow] equivalent representations.\>\"", "]"}]}], "]"}], 
    ";"}], "\n"}]}]], "Input",ExpressionUUID->"fb6d273a-a83e-489a-84db-\
1f7829446f70"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Canonical action of G on Hom(V1,V2): M \[RightArrow] R2 M \
R1^{-1}\"\>"], "Print",ExpressionUUID->"88b6d6b1-a079-47e0-9205-ef03af678236"],

Cell[BoxData["\<\"Check for G-invariance: R2 M = M R1\"\>"], "Print",ExpressionUUID->"049c0a23-9db5-47a3-979c-76424e519ab6"],

Cell[BoxData["\<\"Symbolic condition:\"\>"], "Print",ExpressionUUID->"cf1781a4-feba-4d75-a716-337741ce6278"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"", 2,
    138, 16, 19605451277401365697, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "MSG", \
"Message",ExpressionUUID->"5ef49ddb-c874-40c2-a171-bdc24ef306f8"],

Cell[BoxData["\<\"G-invariant intertwiners M:\"\>"], "Print",ExpressionUUID->"73075ea2-bdc7-4e6a-8b70-7d22ec16a12a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      RowBox[{
       RowBox[{"m", "[", 
        RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"m", "[", 
          RowBox[{"1", ",", "1"}], "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"m", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}]}]}]], 
     ItemBox[
      RowBox[{
       RowBox[{"m", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
         RowBox[{"m", "[", 
          RowBox[{"1", ",", "1"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["\[ImaginaryI]", "2"]}], ")"}], " ", 
         RowBox[{"m", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}]}]}]]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[140]//TableForm= \
",ExpressionUUID->"d5d4b173-825c-4d6c-8801-9294dae210fc"],

Cell[BoxData["\<\"\[DoubleRightArrow] There exists a nonzero (possibly \
invertible) intertwiner \[RightArrow] equivalent representations.\"\>"], \
"Print",ExpressionUUID->"7a55b4be-9929-43c8-b0ef-c02b9f368ac2"]
}, Open  ]],

Cell["\<\
Now, Dual\[NonBreakingSpace]of a vector space\[NonBreakingSpace]V\
\[NonBreakingSpace]is the set of linear maps from\[NonBreakingSpace]V\
\[NonBreakingSpace]to\[NonBreakingSpace]C\[NonBreakingSpace]and is denoted\
\[NonBreakingSpace]V*. Usually if vectors in\[NonBreakingSpace]V\
\[NonBreakingSpace]are denoted by kets (e.g.\[NonBreakingSpace]|v\:27e9) then \
vectors in\[NonBreakingSpace]V*\[NonBreakingSpace]are denoted by bras (e.g.\
\[NonBreakingSpace]\:27e8v|). If we fix a basis\[NonBreakingSpace]{|v1\:27e9,\
\[NonBreakingSpace]|v2\:27e9, . . \
.}\[NonBreakingSpace]for\[NonBreakingSpace]V\[NonBreakingSpace]then the \
transpose is a linear map from\[NonBreakingSpace]V\[NonBreakingSpace]to\
\[NonBreakingSpace]V\:2217\[NonBreakingSpace]given by\[NonBreakingSpace]|vi\
\:27e9 \[RightArrow] \:27e8vi|. Now, for a representation (R,V) we can define \
the\[NonBreakingSpace]dual representation\[NonBreakingSpace](R*,V*) by\
\[NonBreakingSpace]R*(g)\:27e8v*|\[NonBreakingSpace]:=\[NonBreakingSpace]\
\:27e8v*|R(g^\[Minus]1). 

If we think of\[NonBreakingSpace]R*\[NonBreakingSpace]as a representation on\
\[NonBreakingSpace]V\[NonBreakingSpace](using the transpose map to relate\
\[NonBreakingSpace]V\[NonBreakingSpace]and\[NonBreakingSpace]V*), then it is \
given by\[NonBreakingSpace]R*(g) = (R(g*\[Minus]1))^ transposed\
\[NonBreakingSpace]. When\[NonBreakingSpace]R\[NonBreakingSpace]is a unitary \
representation, this is the same as the\[NonBreakingSpace]conjugate \
representation\[NonBreakingSpace]R(g)*, where here\[NonBreakingSpace]\:2217\
\[NonBreakingSpace]denotes the entry wise complex conjugate. One can readily \
verify that the dual and conjugate representations are indeed representations \
and that between Hom(V1\[NonBreakingSpace], V2\[NonBreakingSpace]) and \
\[NonBreakingSpace]V1\[NonBreakingSpace]\[CircleTimes]\[NonBreakingSpace]V2\
\[NonBreakingSpace]there exists a unitary change of basis such that  for any\
\[NonBreakingSpace]g\[NonBreakingSpace]\[Element]\[NonBreakingSpace]G,\
\[NonBreakingSpace]UR1(g)U\[Dagger]\[NonBreakingSpace]=\[NonBreakingSpace]R2(\
g).\
\>", "Text",ExpressionUUID->"5706a462-e8fb-4c7c-8f76-2ca8b82242e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"1.", " ", "Define", " ", "the", " ", "group"}], ",", " ", 
    RowBox[{
    "here", " ", "lets", " ", "take", " ", "the", " ", "addition", " ", "mod",
      " ", "2"}], ",", " ", 
    RowBox[{"Z2", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"e", ",", " ", "g"}], "}"}]}], ",", " ", 
    RowBox[{
     RowBox[{"g", "^", "2"}], " ", "=", " ", "e"}]}], "  ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{
     "R", ",", " ", "Rdual", ",", " ", "Rconj", ",", " ", "e", ",", " ", 
      "g"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"group", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"e", ",", " ", "g"}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Representation", " ", "on", " ", "V"}], " ", "=", " ", 
     RowBox[{"C", "^", "2"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"R", "[", "e", "]"}], " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"R", "[", "g", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"swap", " ", "matrix"}], ",", " ", "unitary"}], " ", "*)"}], 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Helper", ":", " ", 
     RowBox[{"group", " ", "multiplication", " ", "in", " ", "Z2"}]}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"multiply", "[", 
      RowBox[{"a_", ",", " ", "b_"}], "]"}], " ", ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", " ", "===", " ", "e"}], ",", " ", "b", ",", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"b", " ", "===", " ", "e"}], ",", " ", "a", ",", " ", "e"}], 
        "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Representation", " ", "property", " ", "checker"}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"representationQ", "[", "rep_", "]"}], " ", ":=", " ", 
     RowBox[{"And", " ", "@@", " ", 
      RowBox[{"Table", "[", "\n", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"rep", "[", 
          RowBox[{"multiply", "[", 
           RowBox[{"a", ",", " ", "b"}], "]"}], "]"}], " ", "===", " ", 
         RowBox[{
          RowBox[{"rep", "[", "a", "]"}], ".", 
          RowBox[{"rep", "[", "b", "]"}]}]}], ",", "\n", "  ", 
        RowBox[{"{", 
         RowBox[{"a", ",", " ", "group"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"b", ",", " ", "group"}], "}"}]}], "\n", "  ", "]"}]}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Original representation valid? \>\"", ",", " ", 
      RowBox[{"representationQ", "[", "R", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "2.", " ", "Dual", " ", "and", " ", "Conjugate", " ", "Representations"}],
     "  ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Dual", ":", " ", 
      RowBox[{"R", "*", 
       RowBox[{"(", "g", ")"}]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"R", "[", 
        RowBox[{"g", "^", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"R", "[", "g", "]"}], "]"}], " ", "since", " ", "g"}], "=", 
       RowBox[{
        RowBox[{"g", "^", 
         RowBox[{"-", "1"}]}], " ", "in", " ", "Z2"}]}]}]}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Rdual", "[", "h_", "]"}], " ", ":=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"R", "[", "h", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Conjugate", ":", " ", 
      RowBox[{"R", 
       RowBox[{"(", "g", ")"}], "*"}]}], " ", "=", " ", 
     RowBox[{"entrywise", " ", "complex", " ", "conjugate"}]}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Rconj", "[", "h_", "]"}], " ", ":=", " ", 
     RowBox[{"Conjugate", "[", 
      RowBox[{"R", "[", "h", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Dual representation valid? \>\"", ",", " ", 
      RowBox[{"representationQ", "[", "Rdual", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Conjugate representation valid? \>\"", ",", " ", 
      RowBox[{"representationQ", "[", "Rconj", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<For unitary R, Rdual == Rconj ? \>\"", ",", " ", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"Rdual", "[", "g", "]"}], " ", "==", " ", 
        RowBox[{"Rconj", "[", "g", "]"}]}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"3.", " ", "Verify", " ", "Hom", 
      RowBox[{"(", 
       RowBox[{"V1", ",", " ", "V2"}], ")"}]}], " ", "\[TildeFullEqual]", " ", 
     RowBox[{"V1", "*", " ", 
      RowBox[{"\[CircleTimes]", " ", 
       RowBox[{"V2", " ", "isomorphism"}]}]}]}], "     ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"dimV1", " ", "=", " ", "2"}], ";", " ", 
    RowBox[{"dimV2", " ", "=", " ", "3"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"basisV1", " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "dimV1", "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"standard", " ", "basis", " ", "vectors"}], " ", "|", 
     RowBox[{"e_i", ">"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"basisV2", " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "dimV2", "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Build", " ", "the", " ", "isomorphism", " ", 
     RowBox[{"\[CapitalPhi]", " ", ":", " ", 
      RowBox[{
       RowBox[{"V1", "*", " ", 
        RowBox[{"\[CircleTimes]", " ", "V2"}]}], " ", "\[RightArrow]", " ", 
       RowBox[{"Hom", 
        RowBox[{"(", 
         RowBox[{"V1", ",", "V2"}], ")"}]}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalPhi]", 
       RowBox[{"(", 
        RowBox[{"v", "*", " ", 
         RowBox[{"\[CircleTimes]", " ", "w"}]}], ")"}], " ", "acts", " ", 
       "as", " ", "x"}], " ", "\[RightTeeArrow]", " ", 
      RowBox[{"<", 
       RowBox[{"v", "*"}]}]}], "|", 
     RowBox[{"x", ">"}], "|", 
     RowBox[{"w", ">"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Phi", "[", "vstarTensorW_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vstar", ",", " ", "w"}], "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vstar", ",", " ", "w"}], "}"}], " ", "=", " ", 
         "vstarTensorW"}], ";", "\n", "  ", 
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", " ", "w", ",", " ", "vstar"}], "]"}]}]}], "\n",
       "  ", "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Build", " ", "a", " ", "complete", " ", "basis", " ", "of", " ", "V1", 
     "*", " ", 
     RowBox[{"\[CircleTimes]", " ", "V2"}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"tensorBasis", " ", "=", " ", "\n", "  ", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"basisV1", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
           RowBox[{"basisV2", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "dimV1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", " ", "dimV2"}], "}"}]}], "]"}], ",", " ", "1"}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Apply", " ", "\[CapitalPhi]", " ", "to", " ", "each", " ", "basis", " ",
       "element"}], " ", "\[RightArrow]", " ", 
     RowBox[{
     "get", " ", "a", " ", "set", " ", "of", " ", "matrices", " ", "in", " ", 
      "Hom", 
      RowBox[{"(", 
       RowBox[{"V1", ",", "V2"}], ")"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"phiImages", " ", "=", " ", 
     RowBox[{"Phi", " ", "/@", " ", "tensorBasis"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Flatten", " ", "into", " ", "column", " ", "vectors", " ", "to", " ", 
     "build", " ", "the", " ", "linear", " ", "map", " ", "matrix"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"PhiMatrix", " ", "=", " ", 
     RowBox[{"Flatten", " ", "/@", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", " ", "1"}], "]"}], " ", "&"}], " ", "/@", " ", 
        "phiImages"}], ")"}]}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Verify", " ", "invertibility", " ", "of", " ", "\[CapitalPhi]", " ", 
     "as", " ", "a", " ", "linear", " ", "map"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"isInvertible", " ", "=", " ", 
     RowBox[{
      RowBox[{"Det", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "PhiMatrix", "]"}], ".", "PhiMatrix"}], 
       "]"}], " ", "\[NotEqual]", " ", "0"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Is \[CapitalPhi] invertible (i.e. an isomorphism)? \>\"", ",", " ", 
      "isInvertible"}], "]"}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"4.", " ", "Dimension", " ", "sanity", " ", "check"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"dimHom", " ", "=", " ", 
     RowBox[{"dimV1", "*", "dimV2"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dimTensor", " ", "=", " ", 
     RowBox[{"dimV1", "*", "dimV2"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<dim(Hom(V1,V2)) == dim(V1*\[CircleTimes]V2)? \>\"", ",", " ", 
      RowBox[{"dimHom", " ", "==", " ", "dimTensor"}]}], "]"}], ";"}], 
   "\n"}]}]], "Input",ExpressionUUID->"02ba36df-f933-4c7f-8c5d-81bf73f07080"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"\<\"Original representation valid? \"\>", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], "&&", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True"}], "}"}]}],
  SequenceForm["Original representation valid? ", 
   And[{True, True}, {True, True}]],
  Editable->False]], "Print",ExpressionUUID->"b2a1b1fb-33b6-4174-8026-\
a3a1c2cfe517"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"\<\"Dual representation valid? \"\>", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], "&&", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True"}], "}"}]}],
  SequenceForm["Dual representation valid? ", 
   And[{True, True}, {True, True}]],
  Editable->False]], "Print",ExpressionUUID->"3495a3a1-7573-496c-bcd5-\
9d0b3cb303f2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"\<\"Conjugate representation valid? \"\>", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}], "&&", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True"}], "}"}]}],
  SequenceForm["Conjugate representation valid? ", 
   And[{True, True}, {True, True}]],
  Editable->False]], "Print",ExpressionUUID->"234a90a0-bfff-4702-858f-\
6769bd6b1117"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For unitary R, Rdual == Rconj ? \"\>", "True"}],
  SequenceForm["For unitary R, Rdual == Rconj ? ", True],
  Editable->False]], "Print",ExpressionUUID->"8deb2fe3-605d-44e3-a48f-\
b20bdf710268"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Is \[CapitalPhi] invertible (i.e. an isomorphism)? \"\>", 
   "True"}],
  SequenceForm["Is \[CapitalPhi] invertible (i.e. an isomorphism)? ", True],
  Editable->False]], "Print",ExpressionUUID->"4b9d76ef-b25a-454f-aa25-\
9af64fdf772d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(Hom(V1,V2)) == dim(V1*\[CircleTimes]V2)? \"\>", "True"}],
  SequenceForm["dim(Hom(V1,V2)) == dim(V1*\[CircleTimes]V2)? ", True],
  Editable->False]], "Print",ExpressionUUID->"707acb73-434c-4ea6-9280-\
58b759d1f4ce"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Now, I introduce the topic of irreducible representations - one of the most \
important concepts that tell a lot about the symmetric structure of the \
spaces! first of all, an irreducible representation or an irrep can be \
thought of as the \"atom\" of representations of a group on a space and in \
this sense, it can be used to build other representations. Now  imagine a \
representation (R, V) such that the only space thats invariant under the \
action of the group representation is either {0} or V itself - clearly there \
cannot be a smaller representation thats possible, if you do find another \
subspace W of V such that it is also invariant under thr action of R, then \
(R,W) is the true smallest representation, of course provided that nothing \
smaller exists that's also invariant and not the null set! This \"smallest\" \
rep is our irrep for R(g) for all g\[Element]G
\
\>", "Text",ExpressionUUID->"b2d9cf92-5afc-40e2-b32d-729ef812a89a"],

Cell[BoxData[""], "Input",ExpressionUUID->"2901be24-472e-4cb0-944e-8b45125ec2c6"],

Cell[CellGroupData[{

Cell["", "Input",ExpressionUUID->"fe18ed6d-e126-411e-b725-14993cbf5d90"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        ItemBox["1"], 
        ItemBox["0"]},
       {
        ItemBox["0"], 
        ItemBox["1"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        ItemBox["0"], 
        ItemBox["1"]},
       {
        ItemBox["1"], 
        ItemBox["0"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellLabel->
  "Out[230]= ",ExpressionUUID->"26fe5e60-a90f-46ea-b5cc-7ac4c050a742"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[231]= ",ExpressionUUID->"cbd445f7-f3ed-470f-9333-5b3f7abb828d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      ItemBox[
       RowBox[{"-", "\[ImaginaryI]"}]], 
      ItemBox["0"]},
     {
      ItemBox["0"], 
      ItemBox["\[ImaginaryI]"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[238]//MatrixForm= \
",ExpressionUUID->"4c80a8de-b2b3-4a9f-a54e-464e2fa34026"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]], 
          LineBox[CompressedData["
1:eJwl1wk0Vdv/AHBTkibEveemEA0ypZCEvjtkfAk9eRkylJKKqHhJeqVoMmSo
SIbKlIiSIXpbnluSeuImc8iUmZAMZ//O+//PWmed9Vlrr/Xd32GftfYaN28b
dwE+Pr4h5v3vK4hFP37TurhjmPzfA+u+/60rE+0MhdfKhf/zTO6mQ41R3mC8
WVp6jnHeFHwWz/EHzlpR/Z+MuyU9pguiLsB8dsTxUcY3OZVLc0qCYaXOk8xe
xmmKjkl8OaHQsdtlooVxmfao+t7kGyAX/eS3GsZNxpfLU6MiYPDDrWev/4un
tEQpsPwWlHaIrc9jHLql3je1JBrMapTSExlLbk8u+ZgfC0+K27WuM07Z6Sk0
nX0Hdrdo1J5irGamuXtNehy0x6wLdGBcYkXHmiffg9MHCjV2Mv7sHLXhflQS
HM94/V74v3w01LZ94yZDcIH+kx6agL92dIt/eQrwjbnEVzAWAqd1KSUPYeXv
qUkBjKsMyt9pFT2CubmqAhvGt4w3eFXlp8L72uRmRcYylmMFP7LTQWvvEct/
5wl0We9zuPo4A+6fdEpIYpxlW0JWpWfCreRl0ycYb3O6YmqcnAXrj+U0CDG2
Oc5puhv1FEyfATAFhyXbAN82yYWx20dnm2cJjBb7iHdwc+GMiCc3nnHBq/oX
Z8rzgB1BX5JgbMhNphNLnoNH4eCj/l8E1pvUWX3XyQerElRzj7HouwUPNYry
QcE+fJEF45pqT5PK/Bewf5NS2sNpAk48zcix7ELYZToZyjQY0L4jnboqRfDc
OU3h6xSBtQ1xmiGPi8Dp+bkPQYz7m+mGlenFEJP02KJokqnft8o1RsklYLWa
O75igqnPuOPz21EYqLgnYydGCYRJxeuVLS2DKd/4D90jBGrzrshq2ZSBuV23
iwNjh37HbpnmMhDnf5kNwwS8HBb7jA++BrZ5UMfgAIEYfY+rcWIVsMX+58vG
HgKNjXuPLbOtgG6pF+KqjGX8wDI4rgJCai/KBXUTSM9hSZ6Q54L8pYDDnC4C
L2W5SUjzDWw1to7V7CDwlV++sNeuEhblul6fb2LyS1wa75hQCdfHTDxUGHts
/xX4qb0SCgYo8kcjgXHfGoOSo+9gwZNCu6wvzHx0BX0MP1cFvn1xBZo8Akpv
mru1kqqh77iwTlM1AV2uuajBqRqo/fjs3clSAmK8tH+1o2sgzDsi9WgJMx+d
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
uMvKWA==
           "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.95, 0.627, 0.1425], 
           AbsoluteThickness[2]], 
          LineBox[CompressedData["
1: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
8BrhfaqpJ1d3CIMlK9///7/wf6tkvIo=
           "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.455, 0.7, 0.21], 
           AbsoluteThickness[2]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag#3"]& ]}}, {}}}, {
    DisplayFunction -> Identity, PlotInteractivity :> True, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, PlotInteractivity :> True, 
     DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     PlotInteractivity :> True, DisplayFunction -> Identity, 
     PlotInteractivity :> True, 
     DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"\[Theta]\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"\[Chi](\[Theta])\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-3.9999999999999587`, 3.999999999999959}}, {{
        0, 6.283185307179586}, {-3.9999999999999587`, 3.999999999999959}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}, ExpressionUUID -> 
    "cc394fe5-79ab-42a5-9db6-34bd28f62193"], 
   FormBox[
    FormBox[
     TemplateBox[{"\"j=1/2\"", "\"j=1\"", "\"j=3/2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.24, 0.6, 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.95, 0.627, 0.1425]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.455, 0.7, 0.21]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[240]= ",ExpressionUUID->"e851dab8-a832-48c6-892b-c8e5945f4302"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      ItemBox["0"], 
      ItemBox[
       RowBox[{"-", "1"}]], 
      ItemBox["0"]},
     {
      ItemBox["1"], 
      ItemBox["0"], 
      ItemBox["0"]},
     {
      ItemBox["0"], 
      ItemBox["0"], 
      ItemBox["1"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[242]//MatrixForm= \
",ExpressionUUID->"f4b98bac-ffb3-4a9b-83ed-ef48df775b90"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzbyf69xj00Y7BjD4YB+UI3lrxqT19jD+xE8xm6dN
2g/nWx/14nIqvgDnF1T5JW4uuAHn5+5I7WNSfgDnX3nhybk86Qmc36X/jWFb
5As4v1D7xNQDS9/A+b+Ss9fdzfsA5yftDQuYkPYJzk/+eOXAgY4vcH6Pwfb8
ZW3f4HymA9vNW6p+wPmCWt7n7s/4Bed7zHda/GHSHzhf/P0Zt/rt/+D8Wcd3
MTJnMjjA+Dayjv8VUhjhfO0HAk9qS5jg/LUrhDK2FjHD+TX3Yi9rt7HA+YU2
Ft7zprDC+b/muyS9nsAG518omJVQvogdzrd0V/p3dyEHnH/S1XKFwxxOOH/p
xpmWj1ZzwfmiyjpZcSu54fxLjBxNknt44PytHMXLLpzkhfN1RAWyko7ywfnv
+76JGF/jh/OV29v187ME4PxHUbdvOT1H8D2eXv65NU8Qzq8oSs0Qe4vg+22b
7SVWJgTnv/uTVcP8DcFfeL1xS16xMCI8MmwTKn8j+LJ/J0YXVonA+c/cu09x
sIjC+YfVztjLdSP4WRzLWBQ5xeD87QtUbA9PRPDPWdscDRIUh/N/ZM0OTuhD
8E8EzA/lFZOA85MsbZYvn4Lge+0qqgy8jeAbWq/0/q0oCecDAKiD9UY=
           "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.95, 0.627, 0.1425], 
           AbsoluteThickness[2]], 
          LineBox[CompressedData["
1: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
8BrhfaqpJ1d3CIMlK9///7/wf6tkvIo=
           "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.455, 0.7, 0.21], 
           AbsoluteThickness[2]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag#3"]& ]}}, {}}}, {
    DisplayFunction -> Identity, PlotInteractivity :> True, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, PlotInteractivity :> True, 
     DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     PlotInteractivity :> True, DisplayFunction -> Identity, 
     PlotInteractivity :> True, 
     DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"\[Theta]\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"\[Chi](\[Theta])\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {-1.2499999847016865`, 5.000000006926459}}, {{
        0, 6.283185307179586}, {-1.2499999847016865`, 5.000000006926459}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}, ExpressionUUID -> 
    "b9db75d7-ca61-442d-bafc-eb03f6d9a094"], 
   FormBox[
    FormBox[
     TemplateBox[{"\"l=0\"", "\"l=1\"", "\"l=2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.24, 0.6, 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.95, 0.627, 0.1425]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.455, 0.7, 0.21]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->
  "Out[244]= ",ExpressionUUID->"9f316f03-3570-4c62-bd62-b311f37f2692"]
}, Open  ]],

Cell["\<\
Let G be a group and (R, V) a finite-dimensional representation of G, i.e. a \
homomorphism R : G \[RightArrow] GL(V).  Denote by \|01d43a\:0302 the set of \
all inequivalent irreducible representations (irreps) of G.  Each irrep is \
represented by a pair (r_\[Lambda], V_\[Lambda]), where r_\[Lambda] : G \
\[RightArrow] GL(V_\[Lambda]) acts irreducibly on V_\[Lambda].
 
For any reducible representation (R, V) there exists a basis in which each \
R(g) takes the block-diagonal form

   R(g) \[TildeFullEqual] \:2a01_{\[Lambda] \[Element] \|01d43a\:0302} \
\:2a01_{j=1}^{n_\[Lambda]} r_\[Lambda](g)
          = \:2a01_{\[Lambda] \[Element] \|01d43a\:0302} ( r_\[Lambda](g) \
\[CircleTimes] I_{n_\[Lambda]} ).
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\
\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\
\[NonBreakingSpace]\[NonBreakingSpace]
Here, n_\[Lambda] is the multiplicity of the irrep \[Lambda] in V, I_{n_\
\[Lambda]} is the identity on an n_\[Lambda]-dimensional multiplicity space. \
The symbol \[TildeFullEqual] means that there exists a unitary change of \
basis relating the left-hand and right-hand sides. This expresses that, under \
a suitable basis, every R(g) acts in blocks  corresponding to irreducible \
types; each irrep block may appear multiple times.  Writing r_\[Lambda](g) \
\[CircleTimes] I_{n_\[Lambda]} indicates that the group acts through r_\
\[Lambda](g) on the irrep component and trivially (as the identity) on the \
multiplicity component.

Correspondingly, the vector space V decomposes as

 V \[TildeFullEqual] \:2a01_{\[Lambda] \[Element] \|01d43a\:0302} ( V_\
\[Lambda] \[CircleTimes] \:2102^{n_\[Lambda]} ).
\[NonBreakingSpace]
Each term V_\[Lambda] \[CircleTimes] \:2102^{n_\[Lambda]} is called the \
isotypic component of type \[Lambda]. Here, V_\[Lambda] carries the structure \
of the irrep r_\[Lambda], \:2102^{n_\[Lambda]} is the multiplicity space \
labeling the copies of that irrep and the group G acts only on the \
V_\[Lambda] factor and trivially on the\:2102^{n_\[Lambda]} factor. This \
decomposition shows that V can be viewed as a direct sum of \
\[OpenCurlyDoubleQuote]irrep types\[CloseCurlyDoubleQuote] multiplied by the \
number of times they appear.

The multiplicity space \:2102^{n_\[Lambda]} can be identified with the space \
of G-equivariant linear maps from V_\[Lambda] to V:

 \:2102^{n_\[Lambda]} \[TildeFullEqual] Hom(V_\[Lambda], V)^G.
\[NonBreakingSpace]
Hence the equation previously can be rewritten as V \[TildeFullEqual] \
\:2a01_{\[Lambda] \[Element] \|01d43a\:0302} ( V_\[Lambda] \[CircleTimes] \
Hom(V_\[Lambda], V)^G ). The dimension of Hom(V_\[Lambda], V)^G equals n_\
\[Lambda] because each distinct copy of V_\[Lambda] inside V defines an \
independent G-equivariant embedding V_\[Lambda] \[RightArrow] V.

There exists a natural linear map \[CurlyPhi] : A \[CircleTimes] Hom(A, B) \
\[RightArrow] B defined by \[CurlyPhi](a \[CircleTimes] f) = f(a). This \
canonical map realizes how elements of A \[CircleTimes] Hom(A, B) are sent to \
B, and it provides the explicit correspondence used in the isotypic \
decomposition.

\
\>", "Text",ExpressionUUID->"9fb4ba52-2b19-46cd-97b4-cb455c837087"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Basics 2. Clebsch Gordan decomposition and Fourier transforms in \
representation theory \
\>", "Subtitle",ExpressionUUID->"12dcca7b-b564-452c-b230-4c39aa45a808"],

Cell["\<\
Given two representations (R_\[Mu],V_\[Mu]) and (R_\[Nu],V_\[Nu]) of a group \
G, their tensor product (R_\[Mu] \[CircleTimes] R_\[Nu], V_\[Mu] \
\[CircleTimes] V_\[Nu]) is generally reducible and decomposes as 

V_\[Mu] \[CircleTimes] V_\[Nu] \[TildeFullEqual] \:2a01_{\[Lambda]\[Element]\
\:011c} V_\[Lambda] \[CircleTimes] Hom(V_\[Lambda], V_\[Mu] \[CircleTimes] V_\
\[Nu])^G \[TildeFullEqual] \:2a01_{\[Lambda]\[Element]\:011c} V_\[Lambda] \
\[CircleTimes] \:2102^{M^\[Lambda]_{\[Mu]\[Nu]}}, (using the results from \
previous para)

where M^\[Lambda]_{\[Mu]\[Nu]} := dim Hom(V_\[Lambda], V_\[Mu] \[CircleTimes] \
V_\[Nu])^G is the multiplicity of irrep \[Lambda] in the tensor product (for \
G = U_d these are the Littlewood\[Dash]Richardson coefficients).

The unitary Clebsch\[Dash]Gordan transform U_CG^{\[Mu],\[Nu]} is the change \
of basis that implements this decomposition: it maps the product space \
V_\[Mu] \[CircleTimes] V_\[Nu] into registers (|\[Lambda]\:27e9 \
\[CircleTimes] V_\[Lambda] \[CircleTimes] \:2102^{M^\[Lambda]_{\[Mu]\[Nu]}}), \
exposing an irrep label \[Lambda], an irrep basis vector in V_\[Lambda], and \
a multiplicity label \[Alpha] \[Element] Hom(V_\[Lambda], V_\[Mu] \
\[CircleTimes] V_\[Nu])^G. 

Using Hom(A,B) \[TildeFullEqual] A* \[CircleTimes] B, \[Alpha] can be viewed \
as an intertwiner, and the inverse transform is \
(U_CG^{\[Mu],\[Nu]})\[Dagger](|\[Lambda]\:27e9 \[CircleTimes] |v_\[Lambda]\
\:27e9 \[CircleTimes] |\[Alpha]\:27e9) = \[Alpha](|v_\[Lambda]\:27e9) \
\[Element] V_\[Mu] \[CircleTimes] V_\[Nu]. 

In implementations, one typically pads the various V_\[Lambda] to a common \
dimension (e.g., with ancillas) to realize a single unitary, restricts \
attention to finitely many \[Lambda] when \:011c is infinite, and observes \
that the algorithmic complexity is concentrated in constructing/handling the \
multiplicity spaces.


Now, consider the the regular representation of a finite group G. This is a \
useful representation given by letting each\[NonBreakingSpace]g\
\[NonBreakingSpace]\[Element]\[NonBreakingSpace]G\[NonBreakingSpace]define an \
orthonormal basis vector\[NonBreakingSpace]|g\:27e9. The resulting space \
Span{|g\:27e9\[NonBreakingSpace]:\[NonBreakingSpace]g\[NonBreakingSpace]\
\[Element]\[NonBreakingSpace]G}\[NonBreakingSpace]is denoted\
\[NonBreakingSpace]C[G] and is called the\[NonBreakingSpace]regular \
representation. The vector space \:2102[G] has basis |g\:27e9 for g \
\[Element] G, and G acts on it in two independent ways: left multiplication \
L(g\:2081)|h\:27e9 = |g\:2081h\:27e9 and right multiplication R(g\:2082)|h\
\:27e9 = |h g\:2082\:207b\.b9\:27e9. These actions commute, meaning \
L(g\:2081)R(g\:2082) = R(g\:2082)L(g\:2081), so we can treat them as two \
separate symmetries acting simultaneously\[LongDash]one from a 'left copy' of \
G and one from a 'right copy'. 

This defines a representation of the product group G\[Times]G via 
(g\:2081,g\:2082) \[RightTeeArrow] L(g\:2081)R(g\:2082), since L(g\:2081)R(g\
\:2082)L(h\:2081)R(h\:2082) = L(g\:2081h\:2081)R(g\:2082h\:2082). 

Intuitively, L(g\:2081) moves basis labels on the left and R(g\:2082) on the \
right; their independence means the space \:2102[G] carries two commuting \
G-actions, or equivalently, one action of G\[Times]G. 

This viewpoint underlies the decomposition \:2102[G] \[TildeFullEqual] \
\:2a01_{\[Lambda]\[Element]\:011c} V_\[Lambda] \[CircleTimes]\:0302 V_\
\[Lambda]*, where the left copy acts on V_\[Lambda] and the right copy on its \
dual.

The symbol \[CircleTimes]\:0302 emphasizes that these are irreps of two \
different copies of G, not a tensor product under a single action. If we \
restrict to only one side. for example, the left regular representation, then \
the right factor V_\[Lambda]* serves merely as a multiplicity space, yielding \
the familiar 

\:2102[G] \[TildeFullEqual] \:2a01_{\[Lambda]\[Element]\:011c} V_\[Lambda] \
\[CircleTimes] \:2102^{dim V_\[Lambda]}. Similarly, for the right regular \
representation, the roles of V_\[Lambda] and V_\[Lambda]* are reversed. Thus \
each irrep V_\[Lambda] of G appears inside the regular representation with \
multiplicity equal to its dimension.

Now, we can define the The quantum Fourier transform (QFT) as the unitary map \
implementing the isomorphism \:2102[G] \[TildeFullEqual] \:2a01_{\[Lambda]\
\[Element]\:011c} V_\[Lambda] \[CircleTimes]\:0302 V_\[Lambda]*, taking the \
group-element basis |g\:27e9 to the representation basis |\[Lambda],i,j\:27e9 \
via U_QFT|g\:27e9 = \[CapitalSigma]_{\[Lambda]\[Element]\:011c} \
\[CapitalSigma]_{i,j=1}^{dim V_\[Lambda]} \[Sqrt](dim V_\[Lambda] / |G|) (r_\
\[Lambda](g))_{ij} |\[Lambda],i,j\:27e9. 
Here g labels a single element of G, while (i,j) index the matrix entries of \
the irrep r_\[Lambda](g) (not two separate group elements). Under this change \
of basis, the left and right regular representations become block-diagonal: 

U_QFT L(g\:2081)R(g\:2082) U_QFT\[Dagger] = \
\:2a01_{\[Lambda]\[Element]\:011c} |\[Lambda]\:27e9\:27e8\[Lambda]| \
\[CircleTimes] r_\[Lambda](g\:2081) \[CircleTimes] r_\[Lambda](g\:2082)*, 

showing that each irrep \[Lambda] defines a separate block where the left \
copy of G acts on V_\[Lambda] and the right copy acts on V_\[Lambda]*. In the \
abelian case, such as G = \:2124_N, every irrep is one-dimensional (dim V_\
\[Lambda] = 1), so the indices (i,j) vanish and we obtain the familiar \
discrete Fourier transform U_QFT = N^(-1/2) \[CapitalSigma]_{x,y\[Element]\
\:2124_N} e^(2\[Pi] i xy / N) |y\:27e9\:27e8x|. Thus, for abelian groups, the \
QFT simply maps a basis state |x\:27e9 to a uniform superposition of |y\:27e9 \
weighted by the phase e^(2\[Pi] i xy / N) (exactly the transformation used in \
Shor's algorithm)
\
\>", "Text",ExpressionUUID->"4e94805a-39ed-4ca1-8aa5-3d8625e3fc94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "N", " ", "and", " ", "basic", " ", "objects"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{
     "NQFT", ",", " ", "\[Omega]", ",", " ", "UQFT", ",", " ", "x", ",", " ", 
      "y"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"NQFT", " ", "=", " ", "3"}], ";"}], "                        ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"try", " ", "3"}], ",", " ", "4", ",", " ", "5", ",", " ", 
     RowBox[{"etc", "."}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Omega]", " ", "=", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"2", " ", "Pi", " ", 
       RowBox[{"I", " ", "/", " ", "NQFT"}]}], "]"}]}], ";"}], "          ", 
   RowBox[{"(*", " ", 
    RowBox[{"primitive", " ", "Nth", " ", "root", " ", "of", " ", "unity"}], 
    " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Construct", " ", "the", " ", "QFT", " ", "matrix", " ", "explicitly"}], 
    " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"UQFT", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "NQFT", "]"}]}], ")"}], " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"\[Omega]", "^", 
         RowBox[{"(", 
          RowBox[{"x", " ", "y"}], ")"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"y", ",", " ", "0", ",", " ", 
          RowBox[{"NQFT", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "0", ",", " ", 
          RowBox[{"NQFT", " ", "-", " ", "1"}]}], "}"}]}], "]"}]}]}], ";"}], 
   "\n", "\n", 
   RowBox[{"MatrixForm", "[", "UQFT", "]"}], "              ", 
   RowBox[{"(*", " ", 
    RowBox[{"visualise", " ", "the", " ", "matrix"}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Verify", " ", 
      RowBox[{"unitarity", ":", " ", 
       RowBox[{"UQFT\[Dagger]", " ", "UQFT"}]}]}], " ", "=", " ", "I"}], " ", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"Chop", "[", 
     RowBox[{
      RowBox[{"ConjugateTranspose", "[", "UQFT", "]"}], ".", "UQFT"}], "]"}], 
    " ", "//", " ", "MatrixForm"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Show", " ", "action", " ", "on", " ", "a", " ", "computational", " ", 
      "basis", " ", "state"}], " ", "|", "x\:27e9"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"x0", " ", "=", " ", "2"}], ";"}], "                        ", 
   RowBox[{"(*", " ", 
    RowBox[{"pick", " ", "any", " ", "basis", " ", "state"}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"basisVec", " ", "=", " ", 
     RowBox[{"UnitVector", "[", 
      RowBox[{"NQFT", ",", " ", 
       RowBox[{"x0", " ", "+", " ", "1"}]}], "]"}]}], ";"}], "   ", 
   RowBox[{"(*", " ", 
    RowBox[{"|", 
     RowBox[{
      RowBox[{"x0\:27e9", " ", "in", " ", "1"}], "-", 
      RowBox[{"based", " ", "indexing"}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"transformed", " ", "=", " ", 
     RowBox[{"UQFT", " ", ".", " ", "basisVec"}]}], ";"}], "\n", 
   RowBox[{"Column", "[", 
    RowBox[{"{", "\n", "  ", 
     RowBox[{
      RowBox[{"\"\<Input |x0\:27e9 = \>\"", " ", "<>", " ", 
       RowBox[{"ToString", "[", "x0", "]"}]}], ",", "\n", "  ", 
      "\"\<Output amplitudes (U_QFT|x0\:27e9):\>\"", ",", "\n", "  ", 
      RowBox[{"TableForm", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"y", ",", " ", 
            RowBox[{"ComplexExpand", "[", 
             RowBox[{"transformed", "[", 
              RowBox[{"[", 
               RowBox[{"y", " ", "+", " ", "1"}], "]"}], "]"}], "]"}]}], 
           "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"y", ",", " ", "0", ",", " ", 
            RowBox[{"NQFT", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ",", "\n",
         "    ", 
        RowBox[{"TableHeadings", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"None", ",", " ", 
           RowBox[{"{", 
            RowBox[{"\"\<y\>\"", ",", " ", "\"\<Amplitude\>\""}], "}"}]}], 
          "}"}]}]}], "\n", "  ", "]"}]}], "\n", "}"}], "]"}], 
   "\n"}]}]], "Input",ExpressionUUID->"de888bb6-098b-40ca-ab53-2b01e606ed57"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      ItemBox[
       FractionBox["1", 
        SqrtBox["3"]]], 
      ItemBox[
       FractionBox["1", 
        SqrtBox["3"]]], 
      ItemBox[
       FractionBox["1", 
        SqrtBox["3"]]]},
     {
      ItemBox[
       FractionBox["1", 
        SqrtBox["3"]]], 
      ItemBox[
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]], 
        SqrtBox["3"]]], 
      ItemBox[
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]], 
        SqrtBox["3"]]]},
     {
      ItemBox[
       FractionBox["1", 
        SqrtBox["3"]]], 
      ItemBox[
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]], 
        SqrtBox["3"]]], 
      ItemBox[
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]], 
        SqrtBox["3"]]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[35]//MatrixForm= \
",ExpressionUUID->"3eb412fe-9a80-4a03-bb26-a998f55ecd6f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      ItemBox["1"], 
      ItemBox[
       RowBox[{
        FractionBox["1", "3"], "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]]}], "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]]}]}]], 
      ItemBox[
       RowBox[{
        FractionBox["1", "3"], "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]]}], "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]]}]}]]},
     {
      ItemBox[
       RowBox[{
        FractionBox["1", "3"], "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]]}], "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]]}]}]], 
      ItemBox["1"], 
      ItemBox[
       RowBox[{
        FractionBox["1", "3"], "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]]}], "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]]}]}]]},
     {
      ItemBox[
       RowBox[{
        FractionBox["1", "3"], "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]]}], "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]]}]}]], 
      ItemBox[
       RowBox[{
        FractionBox["1", "3"], "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]]}], "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "3"]]}]}]], 
      ItemBox["1"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[36]//MatrixForm= \
",ExpressionUUID->"b58b94ab-8c01-4668-832f-a7b5007ffad4"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Input |x0\:27e9 = 2\"\>"},
    {"\<\"Output amplitudes (U_QFT|x0\:27e9):\"\>"},
    {
     TagBox[
      TagBox[GridBox[{
         {
          TagBox["\<\"y\"\>",
           HoldForm], 
          TagBox["\<\"Amplitude\"\>",
           HoldForm]},
         {"0", 
          FractionBox["1", 
           SqrtBox["3"]]},
         {"1", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", "2"]}], "-", 
           FractionBox["1", 
            RowBox[{"2", 
             SqrtBox["3"]}]]}]},
         {"2", 
          RowBox[{
           FractionBox["\[ImaginaryI]", "2"], "-", 
           FractionBox["1", 
            RowBox[{"2", 
             SqrtBox["3"]}]]}]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[2.0999999999999996`]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       {None, OutputFormsDump`HeadedColumns}],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$, TableHeadings -> {None, {"y", "Amplitude"}}]]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellLabel->
  "Out[40]= ",ExpressionUUID->"3ce8ee92-ed98-4c48-beda-9d13076ce21a"]
}, Open  ]],

Cell["\<\
The explicit form of the QFT arises from the isomorphism \:2102[G] \
\[TildeFullEqual] \:2a01_{\[Lambda]\[Element]\:011c} V_\[Lambda] \
\[CircleTimes]\:0302 V_\[Lambda]*. The matrix elements (r_\[Lambda](g))_{ij} \
of each irrep r_\[Lambda] form an orthonormal basis for functions on G under \
the inner product 
\:27e8f,h\:27e9 = (1/|G|)\[CapitalSigma]_g f(g)*h(g), with orthogonality \
relation (1/|G|)\[CapitalSigma]_g (r_\[Lambda](g))_{ij}* (r_\[Mu](g))_{kl} = \
\[Delta]_{\[Lambda]\[Mu]} \[Delta]_{ik} \[Delta]_{jl} / dim(V_\[Lambda]). 
Note: This apparently comes from something called the Schur Orthogonality but \
for the sake of preventing Descarte's nihilism taking over, we will take the \
expression at face value and move on - for now. 

The biggest takeway should be this : A QFT is merely a unitary change of \
basis, an isomorphism that takes you from the space spanned by the group \
algebra, that is, the space spanned by all vectors |g\:27e9 from G, denoted \
by \:2102(G), to a space spanned by direct sums of tensor products between \
irreps of left and right regular representations (each on a different copy of \
the group) over all elements of the group, where left and right regular \
represenation is obtained buy just the group\"s action either from left or \
right on the space \:2102(G). 

Note to self : paper on permutational symmetries by Barry Sanders uses left \
and right regular representations to exploit symmetries in rate matrix \
calculations (I think...)

Another note: For an abelian group G, all elements commute: g\:2081g\:2082 = \
g\:2082g\:2081. In any representation r(g), this implies all representation \
matrices commute, r(g\:2081)r(g\:2082) = r(g\:2082)r(g\:2081). Commuting \
normal matrices can be simultaneously diagonalized, so there exists a common \
eigenbasis in which every r(g) is diagonal. Each coordinate axis of this \
basis is then an invariant subspace, meaning the representation decomposes \
into one-dimensional pieces. Hence, every irreducible representation of an \
abelian group must be one-dimensional. 
\
\>", "Text",ExpressionUUID->"34c16f53-95cb-4829-bba3-2fe232a19f8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Schur-Weyl duality", "Chapter",ExpressionUUID->"086f5ee0-472a-4674-a56a-719e39e27315"],

Cell["\<\
We now turn to the two representations relevant here. Recall that the \
symmetric group of degree n, S\:2099, is the group of all permutations of n \
objects. Then we have the following natural representation of the symmetric \
group on the space 
(\:2102^d)^{\[CircleTimes]n}: P(s)|i\:2081\:27e9\[CircleTimes]|i\:2082\:27e9\
\[CircleTimes]\[CenterEllipsis]\[CircleTimes]|i\:2099\:27e9 = \
|i_{s\:207b\.b9(1)}\:27e9\[CircleTimes]|i_{s\:207b\.b9(2)}\:27e9\[CircleTimes]\
\[CenterEllipsis]\[CircleTimes]|i_{s\:207b\.b9(n)}\:27e9 , where s \[Element] \
S\:2099 is a permutation and s(i) labels its action. For example, if s = (12) \
\[Element] S\:2083, then P(s)|i\:2081,i\:2082,i\:2083\:27e9 = \
|i\:2082,i\:2081,i\:2083\:27e9.  Here (P,(\:2102^d)^{\[CircleTimes]n}) is the \
representation of the symmetric group relevant to the Schur transform; P \
depends explicitly on n and implicitly on d.  

Now consider the representation of the unitary group U_d, the group of all d\
\[Times]d unitaries. Its n-fold product action is given by 
Q(U)|i\:2081\:27e9\[CircleTimes]|i\:2082\:27e9\[CircleTimes]\[CenterEllipsis]\
\[CircleTimes]|i\:2099\:27e9 = U|i\:2081\:27e9\[CircleTimes]U|i\:2082\:27e9\
\[CircleTimes]\[CenterEllipsis]\[CircleTimes]U|i\:2099\:27e9, or more \
compactly Q(U)=U^{\[CircleTimes]n}. Thus (Q,(\:2102^d)^{\[CircleTimes]n}) is \
the representation of U_d relevant to the Schur transform.  

Both P(s) and Q(U) satisfy the conditions for reducibility, so each can be \
decomposed into a direct sum of irreducible representations:  
P(s) \[TildeFullEqual] \[CirclePlus]_\[Alpha] I_{n_\[Alpha]} \[CircleTimes] \
p_\[Alpha](s),\:2003and \:2003Q(U) \[TildeFullEqual] \[CirclePlus]_\[Beta] \
I_{m_\[Beta]} \[CircleTimes] q_\[Beta](U)\:2003

where n_\[Alpha] (m_\[Beta]) are the multiplicities of the \[Alpha]-th (\
\[Beta]-th) irreps p_\[Alpha](s) (q_\[Beta](U)) in P(s) (Q(U)).  At this \
stage there is no necessary relation between the two unitary transformations \
implementing these decompositions. However, because P(s) and Q(U) commute, \
P(s)Q(U)=Q(U)P(s). From something that we will again set aside for now, known \
as Schur\[CloseCurlyQuote]s Lemma, it is implied that the irreps of one act \
only on the multiplicity spaces of the other. Hence the simultaneous action \
of P and Q on (\:2102^d)^{\[CircleTimes]n} decomposes as  

Q(U)P(s) \[TildeFullEqual] \[CirclePlus]_{\[Alpha],\[Beta]} I_{m_{\[Alpha],\
\[Beta]}} \[CircleTimes] q_\[Beta](U) \[CircleTimes] p_\[Alpha](s)\:2003

which expresses the essence of Schur\[Dash]Weyl duality: the irreps of \
S\:2099 and U_d form paired structures acting on complementary subspaces of (\
\:2102^d)^{\[CircleTimes]n}. Here\[NonBreakingSpace]m_{\[Alpha],\[Beta]\
\[NonBreakingSpace]} can be thought of as the multiplicity of the irrep\
\[NonBreakingSpace]q\[Beta](U)\[CircleTimes]\:02c6p\[Alpha](s) of the group\
\[NonBreakingSpace]Ud\[NonBreakingSpace]\[Times] Sn. Not only do\
\[NonBreakingSpace]P\[NonBreakingSpace]and\[NonBreakingSpace]Q\
\[NonBreakingSpace]commute, but the algebras they generate (i.e.\
\[NonBreakingSpace]A\[NonBreakingSpace]:=\[NonBreakingSpace]P(C[Sn]) = \
Span{P(s) :\[NonBreakingSpace]s\[NonBreakingSpace]\[Element] Sn}\
\[NonBreakingSpace]and\[NonBreakingSpace]B\[NonBreakingSpace]:=\
\[NonBreakingSpace]Q(C[Ud]) = Span{Q(U) :\[NonBreakingSpace]U\
\[NonBreakingSpace]\[Element] Ud})\[NonBreakingSpace]centralize\
\[NonBreakingSpace]each other, meaning that\[NonBreakingSpace]B is the set of \
operators in End((Cd)\[CircleTimes]n) commuting with\[NonBreakingSpace]A\
\[NonBreakingSpace]and vice versa,\[NonBreakingSpace]A\[NonBreakingSpace]is \
the set of operators in End((Cd)\[CircleTimes]n) commuting with\
\[NonBreakingSpace]B. This means that the multiplicities\[NonBreakingSpace]m\
\[Alpha],\[Beta]\[NonBreakingSpace]are either zero or one, and that each\
\[NonBreakingSpace]\[Alpha]\[NonBreakingSpace]and\[NonBreakingSpace]\[Beta]\
\[NonBreakingSpace]appears at most once. To further understand this, we have \
A' = B and B' = A, where A' is the set of\[NonBreakingSpace]all operators \
that commute with everything in A and vice versa for B'. 

.If an additional operator C commuted with both A and B, it would lie in A'\
\:2229B' = A\:2229B, but this intersection contains only scalar multiples of \
the identity. Hence no nontrivial operator can commute with both. If any \
multiplicity m_{\[Alpha],\[Beta]} > 1 existed in the joint decomposition, we \
could define operators mixing the identical copies that would commute with \
both A and B, contradicting the mutual commutant property. Therefore, the \
only consistent possibility is m_{\[Alpha],\[Beta]} = 0 or 1: each (U_d, S\
\:2099) irrep pair appears exactly once. These pairs can be labelled by some \
additional index \[Lambda] that tracks which pair youre working with. 

We have thus seen that the Schur duality (Schur\[Dash]Weyl duality) \
characterizes how (\:2102^d)^{\[CircleTimes]n} decomposes under the joint \
action of U_d and S\:2099. Let I_{d,n} be the set of partitions \[Lambda] = (\
\[Lambda]\:2081,\[Ellipsis],\[Lambda]_d) of n into \[LessEqual] d parts. 

For each \[Lambda] \[Element] I_{d,n}, there exist irreps q^d_\[Lambda] of \
U_d and p_\[Lambda] of S\:2099, and Schur duality states that there is a \
Schur basis |\[Lambda]\:27e9|q_\[Lambda]\:27e9|p_\[Lambda]\:27e9_{Sch} \
satisfying Q(U)|\[Lambda],q_\[Lambda],p_\[Lambda]\:27e9_{Sch} = |\[Lambda]\
\:27e9(q^d_\[Lambda](U)|q_\[Lambda]\:27e9)|p_\[Lambda]\:27e9_{Sch} and P(s)|\
\[Lambda],q_\[Lambda],p_\[Lambda]\:27e9_{Sch} = |\[Lambda]\:27e9|q_\[Lambda]\
\:27e9(p_\[Lambda](s)|p_\[Lambda]\:27e9)_{Sch}. 

Thus (\:2102^d)^{\[CircleTimes]n} \[TildeFullEqual] \[CirclePlus]_{\[Lambda]\
\[Element]I_{d,n}} Q^d_\[Lambda] \[CircleTimes] P_\[Lambda]. The Schur basis \
vectors are superpositions of computational basis states \
|i\:2081,\[Ellipsis],i_n\:27e9 with coefficients [U_{Sch}]^{\[Lambda],q_\
\[Lambda],p_\[Lambda]}_{i\:2081,\[Ellipsis],i_n}, where U_{Sch} implements \
this change of basis (the Schur transform). 

In this basis, U_{Sch} Q(U) P(s) U_{Sch}^\[Dagger] = \[Sum]_{\[Lambda]\
\[Element]I_{d,n}} |\[Lambda]\:27e9\:27e8\[Lambda]| \[CircleTimes] q^d_\
\[Lambda](U) \[CircleTimes] p_\[Lambda](s). The Schur transform thus maps \
computational states |i\:2081,\[Ellipsis],i_n\:27e9 into symmetry-adapted \
states |\[Lambda]\:27e9|q\:27e9|p\:27e9, separating the degrees of freedom of \
U_d and S\:2099 and revealing the joint symmetry structure of the n-qudit \
space.
\
\>", "Text",ExpressionUUID->"7c28aa83-36e9-4c5c-aba7-2b5f2d09565c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
   "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Example", " ", "1"}], ":", " ", 
      RowBox[{"Schur", " ", "Transform", " ", "for", " ", "d"}]}], "=", "2"}],
     ",", " ", 
    RowBox[{"n", "=", "2"}]}], "  ", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
   "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", "\n", 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Computational", " ", "basis", " ", "states"}], " ", "|", 
      RowBox[{"00", ">"}]}], ",", " ", 
     RowBox[{"|", 
      RowBox[{"01", ">"}]}], ",", " ", 
     RowBox[{"|", 
      RowBox[{"10", ">"}]}], ",", " ", 
     RowBox[{"|", 
      RowBox[{"11", ">"}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"basis", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<00\>\"", ",", " ", "\"\<01\>\"", ",", " ", "\"\<10\>\"", ",", " ", 
       "\"\<11\>\""}], "}"}]}], ";"}], "\n", "\n", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Define", " ", "partitions", " ", "\[Lambda]", " ", "for", " ", "n"}], 
     "=", "2"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"\[Lambda]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", ",", "0"}], ")"}], ":", " ", 
       RowBox[{"symmetric", " ", "irrep"}]}]}], ";", " ", 
     RowBox[{"\[Lambda]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", ",", "1"}], ")"}], ":", " ", 
       RowBox[{"antisymmetric", " ", "irrep"}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"partitions", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], "\n", "\n", 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Define", " ", "Schur", " ", "basis", " ", "vectors"}], " ", 
      "|", "\[Lambda]"}], ",", " ", "q_\[Lambda]", ",", " ", 
     RowBox[{"p_\[Lambda]", ">", "_Sch"}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "q_\[Lambda]", " ", "corresponds", " ", "to", " ", "U_d", " ", "irrep", 
     " ", "label", " ", 
     RowBox[{"(", 
      RowBox[{"total", " ", "spin", " ", "projection"}], ")"}]}], " ", "*)"}],
    "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "p_\[Lambda]", " ", "corresponds", " ", "to", " ", "S_n", " ", "irrep", 
     " ", "label", " ", 
     RowBox[{"(", 
      RowBox[{"symmetry", " ", "type"}], ")"}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"schurBasis", " ", "=", " ", 
     RowBox[{"<|", "\n", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "0"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"{", "\n", "    ", 
         RowBox[{
          RowBox[{
          "\"\<\[Lambda]=(2,0), q_\[Lambda]=+1, p_\[Lambda]=0\>\"", " ", 
           "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
            "}"}]}], ",", "                            ", 
          RowBox[{"(*", " ", 
           RowBox[{"|", 
            RowBox[{"00", ">"}]}], " ", "*)"}], "\n", "    ", 
          RowBox[{
          "\"\<\[Lambda]=(2,0), q_\[Lambda]=0, p_\[Lambda]=0\>\"", "  ", 
           "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "2", "]"}]}], ",", " ", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "2", "]"}]}], ",", " ", "0"}], "}"}]}], 
          ",", "            ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"|", 
              RowBox[{"01", ">", "+"}], "|", 
              RowBox[{"10", ">"}]}], ")"}], "/", 
            RowBox[{"\[Sqrt]", "2"}]}], " ", "*)"}], "\n", "    ", 
          RowBox[{
          "\"\<\[Lambda]=(2,0), q_\[Lambda]=-1, p_\[Lambda]=0\>\"", " ", 
           "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", "1"}], 
            "}"}]}]}], "                             ", 
         RowBox[{"(*", " ", 
          RowBox[{"|", 
           RowBox[{"11", ">"}]}], " ", "*)"}], "\n", "  ", "}"}]}], ",", "\n",
        "  ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "1"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"{", "\n", "    ", 
         RowBox[{
         "\"\<\[Lambda]=(1,1), q_\[Lambda]=0, p_\[Lambda]=0\>\"", "  ", 
          "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", 
            RowBox[{"1", "/", 
             RowBox[{"Sqrt", "[", "2", "]"}]}], ",", " ", 
            RowBox[{
             RowBox[{"-", "1"}], "/", 
             RowBox[{"Sqrt", "[", "2", "]"}]}], ",", " ", "0"}], "}"}]}], 
         "            ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"|", 
             RowBox[{"01", ">", "-"}], "|", 
             RowBox[{"10", ">"}]}], ")"}], "/", 
           RowBox[{"\[Sqrt]", "2"}]}], " ", "*)"}], "\n", "  ", "}"}]}]}], 
      "\n", "|>"}]}], ";"}], "\n", "\n", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Collect", " ", "all", " ", "Schur", " ", "basis", " ", "vectors", " ", 
     "into", " ", "transformation", " ", "matrix"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"USch", " ", "=", " ", 
     RowBox[{"Normalize", " ", "/@", " ", 
      RowBox[{"Values", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Values", "[", "schurBasis", "]"}], ",", " ", "1"}], "]"}], 
       "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"USch", " ", "=", " ", 
     RowBox[{"Transpose", "[", "USch", "]"}]}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"columns", " ", "=", " ", 
     RowBox[{"Schur", " ", "basis", " ", "vectors"}]}], " ", "*)"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Print", " ", "details"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Partitions \[Lambda] used: \>\"", ",", " ", "partitions"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Dimensions of each irrep block: \[Lambda]=(2,0) \[RightArrow] dim \
3, \[Lambda]=(1,1) \[RightArrow] dim 1\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Multiplicity structure: Each \[Lambda] occurs once (no \
degeneracy)\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Schur transform matrix U_Sch (columns = Schur basis vectors):\>\"", 
     "]"}], ";"}], "\n", 
   RowBox[{"MatrixForm", "[", "USch", "]"}], "\n"}]}]], "Input",ExpressionUUID\
->"1703d620-713d-4aa1-a006-584067c0a73a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Partitions \[Lambda] used: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}],
  SequenceForm["Partitions \[Lambda] used: ", {{2, 0}, {1, 1}}],
  Editable->False]], "Print",ExpressionUUID->"15ff9162-9aaf-491e-8a64-\
4f0a103267bc"],

Cell[BoxData["\<\"Dimensions of each irrep block: \[Lambda]=(2,0) \
\[RightArrow] dim 3, \[Lambda]=(1,1) \[RightArrow] dim 1\"\>"], "Print",Expres\
sionUUID->"2de33b2f-d193-4e2d-be0b-3ed2820f0cbb"],

Cell[BoxData["\<\"Multiplicity structure: Each \[Lambda] occurs once (no \
degeneracy)\"\>"], "Print",ExpressionUUID->"6c4f87bd-430d-46bd-b2e1-\
94de0ddb9b31"],

Cell[BoxData["\<\"Schur transform matrix U_Sch (columns = Schur basis \
vectors):\"\>"], "Print",ExpressionUUID->"d840778b-a89b-4c80-9e04-\
08ee2b625265"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", 
      FractionBox["1", 
       SqrtBox["2"]], "0", 
      FractionBox["1", 
       SqrtBox["2"]]},
     {"0", 
      FractionBox["1", 
       SqrtBox["2"]], "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]},
     {"0", "0", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[67]//MatrixForm= \
",ExpressionUUID->"903c0d34-31e0-45ea-bdef-037b227c6f66"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
   "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Verify", " ", "orthogonality", " ", "of", " ", "Schur", " ", 
    "subspaces"}], "   ", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
   "*)"}]}]], "Input",ExpressionUUID->"ebcbce8f-4f21-406f-ae87-89eb7268c94f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Extract", " ", "vectors", " ", "for", " ", "each", " ", "irrep"}],
    " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"tripletStates", " ", "=", " ", 
     RowBox[{"Values", "[", 
      RowBox[{"schurBasis", "[", 
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "0"}], "}"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"singletState", " ", "=", " ", 
     RowBox[{
      RowBox[{"Values", "[", 
       RowBox[{"schurBasis", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "1"}], "}"}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Compute", " ", "inner", " ", "products", " ", "between", " ", "all", " ",
      "pairs"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<\\nInner products between triplet and singlet states:\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"TableForm", "[", "\n", "  ", 
     RowBox[{
      RowBox[{"Table", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Keys", "[", 
            RowBox[{"schurBasis", "[", 
             RowBox[{"{", 
              RowBox[{"2", ",", " ", "0"}], "}"}], "]"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"Keys", "[", 
            RowBox[{"schurBasis", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "1"}], "}"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "     ", 
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{"Conjugate", "[", 
             RowBox[{"tripletStates", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", "singletState"}], 
           "]"}]}], "}"}], ",", "\n", "    ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", 
          RowBox[{"Length", "[", "tripletStates", "]"}]}], "}"}]}], "\n", 
       "  ", "]"}], ",", "\n", "  ", 
      RowBox[{"TableHeadings", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Triplet State\>\"", ",", " ", "\"\<Singlet State\>\"", ",", 
           " ", "\"\<\:27e8Triplet|Singlet\:27e9\>\""}], "}"}]}], "}"}]}]}], 
     "\n", "]"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
    "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Construct", " ", "projectors", " ", "for", " ", "each", " ", "irrep", 
     " ", "space"}], " ", "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"Ptriplet", " ", "=", " ", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", " ", "#", ",", " ", 
          RowBox[{"Conjugate", "[", "#", "]"}]}], "]"}], " ", "&"}], " ", "/@",
        " ", "tripletStates"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Psinglet", " ", "=", " ", 
     RowBox[{"Outer", "[", 
      RowBox[{"Times", ",", " ", "singletState", ",", " ", 
       RowBox[{"Conjugate", "[", "singletState", "]"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<\\nProjector onto triplet (symmetric) subspace:\>\"", 
     "]"}], ";"}], "\n", 
   RowBox[{"MatrixForm", "[", "Ptriplet", "]"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<\\nProjector onto singlet (antisymmetric) subspace:\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{"MatrixForm", "[", "Psinglet", "]"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Check", " ", "that", " ", "they", " ", "are", " ", "orthogonal", " ", 
     "projectors"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<\\nOrthogonality check (Ptriplet.Psinglet):\>\"", 
     "]"}], ";"}], "\n", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Ptriplet", ".", "Psinglet"}], "]"}], "]"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
    "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Verify", " ", "decomposition", " ", "completeness"}], 
    "         ", "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"I4", " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "4", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<\\nCheck completeness: Ptriplet + Psinglet = Identity ?\>\"", "]"}],
     ";"}], "\n", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Ptriplet", " ", "+", " ", "Psinglet"}], "]"}], "]"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"Ptriplet", " ", "+", " ", "Psinglet"}], " ", "==", " ", 
        "I4"}], "]"}], ",", "\n", "   ", 
      RowBox[{
      "Print", "[", 
       "\"\<The Schur subspaces span the full 4D space (decomposition \
complete).\>\"", "]"}], ",", "\n", "   ", 
      RowBox[{"Print", "[", "\"\< Decomposition incomplete.\>\"", "]"}]}], 
     "\n", "]"}], ";"}], "\n"}]}]], "Input",
 CellLabel->
  "In[68]:= ",ExpressionUUID->"37512cbb-304e-4cc0-916d-6f5134f1c5d5"],

Cell["\<\
How do we know this partitioning breaks the common representation space into \
disjoint subspaces? we can check for orthogonality! \
\>", "Text",ExpressionUUID->"1044154e-b2fd-4eb1-b156-bfb8af727758"],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\nInner products between triplet and singlet \
states:\"\>"], "Print",ExpressionUUID->"0827ea61-ff13-4c2e-922b-7ee82e23ca8c"],

Cell[BoxData["\<\"\\nProjector onto triplet (symmetric) subspace:\"\>"], \
"Print",ExpressionUUID->"433e9d44-280d-452c-b172-e22911b0f8c6"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", 
      FractionBox["1", "2"], 
      FractionBox["1", "2"], "0"},
     {"0", 
      FractionBox["1", "2"], 
      FractionBox["1", "2"], "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[75]//MatrixForm= \
",ExpressionUUID->"6655e170-458c-4826-a141-65f56e4462c5"],

Cell[BoxData["\<\"\\nProjector onto singlet (antisymmetric) subspace:\"\>"], \
"Print",ExpressionUUID->"3b9ae0df-fbe8-4c6a-bb23-5e14f81150f3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", 
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "2"]}], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      FractionBox["1", "2"], "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[77]//MatrixForm= \
",ExpressionUUID->"74cc30bc-d148-4838-aadd-96642c14df63"],

Cell[BoxData["\<\"\\nOrthogonality check (Ptriplet.Psinglet):\"\>"], "Print",ExpressionUUID->"5e321369-6b80-4f19-bea7-50a189e29a82"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[79]//MatrixForm= \
",ExpressionUUID->"8dd3117a-acc3-4847-bd2f-8c52479b8c6b"],

Cell[BoxData["\<\"\\nCheck completeness: Ptriplet + Psinglet = Identity \
?\"\>"], "Print",ExpressionUUID->"cf928d5f-ce8f-414a-9c12-1f75ffd45111"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[82]//MatrixForm= \
",ExpressionUUID->"81737eef-684b-456c-957a-79f043ae2986"],

Cell[BoxData["\<\"The Schur subspaces span the full 4D space (decomposition \
complete).\"\>"], "Print",ExpressionUUID->"6c81e0cc-8ad3-42a3-aad2-\
b6278cbc77da"],

Cell[BoxData[""], "Input",ExpressionUUID->"8b403f5f-3229-451b-ab3e-00be7dff81e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
   "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Example", " ", "2"}], ":", " ", 
      RowBox[{"Schur", " ", "Transform", " ", "for", " ", "d"}]}], "=", "2"}],
     ",", " ", 
    RowBox[{"n", "=", "3"}]}], "  ", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
   "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", "\n", 
   "\n", "\n", 
   RowBox[{
    RowBox[{"basis3", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<000\>\"", ",", " ", "\"\<001\>\"", ",", " ", "\"\<010\>\"", ",", 
       " ", "\"\<011\>\"", ",", " ", "\"\<100\>\"", ",", " ", "\"\<101\>\"", 
       ",", " ", "\"\<110\>\"", ",", " ", "\"\<111\>\""}], "}"}]}], ";"}], 
   "\n", "\n", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Partitions", " ", "\[Lambda]", " ", "for", " ", "n"}], "=", 
     "3"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"\[Lambda]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", ",", "0"}], ")"}], ":", " ", 
       RowBox[{"symmetric", " ", "irrep"}]}]}], ";", " ", 
     RowBox[{"\[Lambda]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", ",", "1"}], ")"}], ":", " ", 
       RowBox[{"mixed", " ", "symmetry"}]}]}]}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"partitions3", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "1"}], "}"}]}], "}"}]}], ";"}], "\n", "\n", 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Define", " ", "Schur", " ", "basis", " ", "vectors", " ", "as", " ", 
     "in", " ", 
     RowBox[{"Eq", ".", " ", "5.20"}], " ", "and", " ", "5.21"}], " ", "*)"}],
    "\n", "\n", 
   RowBox[{
    RowBox[{"schurBasis3", " ", "=", " ", 
     RowBox[{"<|", "\n", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", " ", "0"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"{", "\n", "    ", 
         RowBox[{
          RowBox[{
          "\"\<\[Lambda]=(3,0), q_\[Lambda]=+3/2, p_\[Lambda]=0\>\"", " ", 
           "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
             ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}]}], ",", 
          "                                  ", 
          RowBox[{"(*", " ", 
           RowBox[{"|", 
            RowBox[{"000", ">"}]}], " ", "*)"}], "\n", "    ", 
          RowBox[{
          "\"\<\[Lambda]=(3,0), q_\[Lambda]=+1/2, p_\[Lambda]=0\>\"", " ", 
           "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}], ",", " ", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}], ",", " ", "0", ",", " ", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}], ",", " ", "0", ",", " ", "0",
              ",", " ", "0"}], "}"}]}], ",", "           ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"|", 
              RowBox[{"001", ">", "+"}], "|", 
              RowBox[{"010", ">", "+"}], "|", 
              RowBox[{"100", ">"}]}], ")"}], "/", 
            RowBox[{"\[Sqrt]", "3"}]}], " ", "*)"}], "\n", "    ", 
          RowBox[{
          "\"\<\[Lambda]=(3,0), q_\[Lambda]=-1/2, p_\[Lambda]=0\>\"", " ", 
           "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}], ",", " ", "0", ",", " ", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}], ",", " ", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}], ",", " ", "0"}], "}"}]}], 
          ",", "           ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"|", 
              RowBox[{"011", ">", "+"}], "|", 
              RowBox[{"101", ">", "+"}], "|", 
              RowBox[{"110", ">"}]}], ")"}], "/", 
            RowBox[{"\[Sqrt]", "3"}]}], " ", "*)"}], "\n", "    ", 
          RowBox[{
          "\"\<\[Lambda]=(3,0), q_\[Lambda]=-3/2, p_\[Lambda]=0\>\"", " ", 
           "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
             ",", " ", "0", ",", " ", "0", ",", " ", "1"}], "}"}]}]}], 
         "                                    ", 
         RowBox[{"(*", " ", 
          RowBox[{"|", 
           RowBox[{"111", ">"}]}], " ", "*)"}], "\n", "  ", "}"}]}], ",", 
       "\n", "  ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", " ", "1"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"{", "\n", "    ", 
         RowBox[{
          RowBox[{
          "\"\<\[Lambda]=(2,1), q_\[Lambda]=+1/2, p_\[Lambda]=0\>\"", " ", 
           "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "2", "]"}]}], ",", " ", 
             RowBox[{
              RowBox[{"-", "1"}], "/", 
              RowBox[{"Sqrt", "[", "2", "]"}]}], ",", " ", "0", ",", " ", "0",
              ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}]}], ",", 
          "                  ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"|", 
              RowBox[{"100", ">", "-"}], "|", 
              RowBox[{"010", ">"}]}], ")"}], "/", 
            RowBox[{"\[Sqrt]", "2"}]}], " ", "*)"}], "\n", "    ", 
          RowBox[{
          "\"\<\[Lambda]=(2,1), q_\[Lambda]=-1/2, p_\[Lambda]=0\>\"", " ", 
           "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "2", "]"}]}], ",", " ", "0", ",", " ", 
             RowBox[{
              RowBox[{"-", "1"}], "/", 
              RowBox[{"Sqrt", "[", "2", "]"}]}], ",", " ", "0"}], "}"}]}], 
          ",", "                  ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"|", 
              RowBox[{"101", ">", "-"}], "|", 
              RowBox[{"011", ">"}]}], ")"}], "/", 
            RowBox[{"\[Sqrt]", "2"}]}], " ", "*)"}], "\n", "    ", 
          RowBox[{
          "\"\<\[Lambda]=(2,1), q_\[Lambda]=+1/2, p_\[Lambda]=1\>\"", " ", 
           "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"2", "/", "3"}], "]"}], ",", " ", "0", ",", " ", "0", 
             ",", " ", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "6", "]"}]}], ",", " ", 
             RowBox[{
              RowBox[{"-", "1"}], "/", 
              RowBox[{"Sqrt", "[", "6", "]"}]}], ",", " ", "0", ",", " ", 
             "0"}], "}"}]}], ",", "          ", 
          RowBox[{"(*", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{"2", "/", "3"}], ")"}]}], "|", 
             RowBox[{"001", ">", " ", 
              RowBox[{
               RowBox[{"-", " ", 
                RowBox[{"(", 
                 RowBox[{"|", 
                  RowBox[{"010", ">", "+"}], "|", "100", "|"}], ")"}]}], "/", 
               
               RowBox[{"\[Sqrt]", "6"}]}]}]}], ")"}], " ", "*)"}], "\n", 
          "    ", 
          RowBox[{
          "\"\<\[Lambda]=(2,1), q_\[Lambda]=-1/2, p_\[Lambda]=1\>\"", " ", 
           "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"2", "/", "3"}], "]"}], ",", " ", "0", ",", " ", 
             RowBox[{
              RowBox[{"-", "1"}], "/", 
              RowBox[{"Sqrt", "[", "6", "]"}]}], ",", " ", 
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", "6", "]"}]}], ",", " ", "0"}], "}"}]}]}], 
         "           ", 
         RowBox[{"(*", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{"2", "/", "3"}], ")"}]}], "|", 
            RowBox[{"110", ">", " ", 
             RowBox[{
              RowBox[{"-", " ", 
               RowBox[{"(", 
                RowBox[{"|", 
                 RowBox[{"101", ">", "+"}], "|", "011", "|"}], ")"}]}], "/", 
              RowBox[{"\[Sqrt]", "6"}]}]}]}], ")"}], " ", "*)"}], "\n", "  ", 
         "}"}]}]}], "\n", "|>"}]}], ";"}], "\n", "\n", "\n", "\n", 
   RowBox[{
    RowBox[{"USch3", " ", "=", " ", 
     RowBox[{"Normalize", " ", "/@", " ", 
      RowBox[{"Values", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Values", "[", "schurBasis3", "]"}], ",", " ", "1"}], "]"}], 
       "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"USch3", " ", "=", " ", 
     RowBox[{"Transpose", "[", "USch3", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Print", " ", "details"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Partitions \[Lambda] used: \>\"", ",", " ", "partitions3"}],
      "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Irrep dimensions: \[Lambda]=(3,0) \[RightArrow] 4D symmetric, \
\[Lambda]=(2,1) \[RightArrow] 4D mixed-symmetry.\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Multiplicity: Each \[Lambda] block appears once, but contains \
multiple q_\[Lambda] values (spin projections).\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<Schur transform matrix U_Sch for d=2, n=3:\>\"", "]"}],
     ";"}], "\n", 
   RowBox[{"MatrixForm", "[", "USch3", "]"}], "\n"}]}]], "Input",ExpressionUUI\
D->"fad13a1a-d2af-4bf6-b7a0-d010500213e9"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Partitions \[Lambda] used: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}],
  SequenceForm["Partitions \[Lambda] used: ", {{3, 0}, {2, 1}}],
  Editable->False]], "Print",ExpressionUUID->"b798f22f-971c-4957-b1a5-\
f1af4905dd5d"],

Cell[BoxData["\<\"Irrep dimensions: \[Lambda]=(3,0) \[RightArrow] 4D \
symmetric, \[Lambda]=(2,1) \[RightArrow] 4D mixed-symmetry.\"\>"], "Print",Exp\
ressionUUID->"c701204f-db32-42d8-a17e-25f40a3b696b"],

Cell[BoxData["\<\"Multiplicity: Each \[Lambda] block appears once, but \
contains multiple q_\[Lambda] values (spin projections).\"\>"], "Print",Expres\
sionUUID->"ae4fecc8-be1a-444d-a34c-9d9ac8ef5d6a"],

Cell[BoxData["\<\"Schur transform matrix U_Sch for d=2, n=3:\"\>"], "Print",ExpressionUUID->"c86adb37-c966-4596-875b-5f9dde94edf6"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox["1", 
       SqrtBox["3"]], "0", "0", 
      FractionBox["1", 
       SqrtBox["2"]], "0", 
      SqrtBox[
       FractionBox["2", "3"]], "0"},
     {"0", 
      FractionBox["1", 
       SqrtBox["3"]], "0", "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "0", "0", "0"},
     {"0", "0", 
      FractionBox["1", 
       SqrtBox["3"]], "0", "0", "0", "0", 
      SqrtBox[
       FractionBox["2", "3"]]},
     {"0", 
      FractionBox["1", 
       SqrtBox["3"]], "0", "0", "0", 
      FractionBox["1", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["6"]], "0"},
     {"0", "0", 
      FractionBox["1", 
       SqrtBox["3"]], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["6"]]}], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["6"]]}]},
     {"0", "0", 
      FractionBox["1", 
       SqrtBox["3"]], "0", "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "0", 
      FractionBox["1", 
       SqrtBox["6"]]},
     {"0", "0", "0", "1", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[94]//MatrixForm= \
",ExpressionUUID->"5d36f01b-8081-4d90-b9ec-d6662bae4dc3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Can we think of the above for photons in some modes through some \
interferometer?\
\>", "Subtitle",ExpressionUUID->"338c3d03-2532-495b-8109-59b91e78ff85"],

Cell[BoxData[""], "Input",
 CellLabel->
  "In[115]:= ",ExpressionUUID->"4a99d705-259e-4e09-82f7-e6b61d5572f3"],

Cell["", "Text",ExpressionUUID->"85b004e0-9e9d-4a16-9a66-92f03c8b6d8c"],

Cell[BoxData[""], "Input",ExpressionUUID->"e7a74fd3-212e-48fa-b7e3-c1f1a07cffaf"],

Cell[BoxData[""], "Input",ExpressionUUID->"47c12212-a088-412e-b3d8-7b0c855320ed"],

Cell[BoxData[""], "Input",ExpressionUUID->"c50535fe-2d8b-4751-a731-57bf24602800"],

Cell[BoxData[""], "Input",ExpressionUUID->"1f90dcc0-f712-46a5-af89-a47f055e0abf"],

Cell[BoxData[""], "Input",ExpressionUUID->"dbf8abe4-83d6-4104-96f9-7227a14a7946"],

Cell[BoxData[""], "Input",ExpressionUUID->"cca7c313-ae75-4a22-b07b-cba3b031a309"],

Cell[BoxData[""], "Input",ExpressionUUID->"af2ee66c-3dbb-4dab-8f66-58515c5ab1ca"],

Cell[BoxData[""], "Input",ExpressionUUID->"4319e70c-4d49-4a1f-af44-f9a9da085702"],

Cell[BoxData[""], "Input",ExpressionUUID->"b82fe372-9ded-4374-ad16-dab0a6111cf4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 681},
WindowMargins->{{316, Automatic}, {Automatic, 50}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2d52a966-1475-4e8b-bae6-a653732f0a5c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 127, 0, 160, "Title",ExpressionUUID->"07d1e98e-6a65-4f41-b400-811e7c3e813b"],
Cell[710, 24, 269, 4, 58, "Text",ExpressionUUID->"04ad0cfa-f320-4c6f-bbb6-cbf70e1c4fa7"],
Cell[982, 30, 409, 6, 81, "Text",ExpressionUUID->"1ce33882-5491-4b0c-88a5-436ef9afdb46"],
Cell[CellGroupData[{
Cell[1416, 40, 108, 0, 69, "Chapter",ExpressionUUID->"0e2c797c-9db7-43d6-959b-ab79d23472fe"],
Cell[1527, 42, 574, 8, 127, "Text",ExpressionUUID->"c2c00343-d802-48f8-a355-3ba7b02b5354"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2138, 55, 114, 0, 53, "Subtitle",ExpressionUUID->"5b908bef-764d-490c-aab2-9af06a59da44"],
Cell[2255, 57, 1092, 16, 173, "Text",ExpressionUUID->"020a72cd-26a2-47d1-8110-ceec3b0558ea"],
Cell[CellGroupData[{
Cell[3372, 77, 9308, 275, 871, "Input",ExpressionUUID->"e9e513ee-222a-48aa-a46d-a5f6af732de5"],
Cell[12683, 354, 158, 4, 34, "Output",ExpressionUUID->"26b50e4f-ca9a-42c1-84cd-69476e770745"],
Cell[12844, 360, 116, 2, 34, "Output",ExpressionUUID->"69949a31-65de-4025-8719-b67165a527bb"],
Cell[12963, 364, 116, 2, 34, "Output",ExpressionUUID->"7ec7c858-d1e6-43f7-9eb0-cee7b61634fd"],
Cell[13082, 368, 116, 2, 34, "Output",ExpressionUUID->"239647ef-886d-43ab-ae99-b18a4f5a4c91"]
}, Open  ]],
Cell[13213, 373, 3739, 60, 679, "Text",ExpressionUUID->"765c8b71-dbfc-4b42-8a1c-aec6a409841b"],
Cell[CellGroupData[{
Cell[16977, 437, 11967, 361, 1060, "Input",ExpressionUUID->"11112b0e-84d9-43d5-8ac3-62ae073e4139"],
Cell[28947, 800, 116, 2, 34, "Output",ExpressionUUID->"644883b3-3307-4aee-9cdb-5e0416af1833"],
Cell[29066, 804, 116, 2, 34, "Output",ExpressionUUID->"95ddce5c-f8da-43cc-8ad4-899b4d69d6fb"],
Cell[29185, 808, 692, 24, 65, "Output",ExpressionUUID->"081d10c3-0795-4de5-aba2-7ed1b71bb0d6"],
Cell[29880, 834, 292, 7, 28, "MSG",ExpressionUUID->"e0487496-35c0-4df5-b370-98ba50f6c105"],
Cell[30175, 843, 266, 8, 34, "Output",ExpressionUUID->"e371e7a9-e7ae-459a-8727-36a1db2af8f8"],
Cell[30444, 853, 668, 23, 65, "Output",ExpressionUUID->"ac48936d-436a-44b3-a001-ce4793a83fc8"],
Cell[31115, 878, 163, 4, 34, "Output",ExpressionUUID->"9d596689-984b-493b-9418-4a20c0098cb0"],
Cell[31281, 884, 130, 3, 34, "Output",ExpressionUUID->"77d4dfe5-377e-4376-a198-75e0c50a322c"],
Cell[31414, 889, 668, 23, 63, "Output",ExpressionUUID->"a9b17d9e-cd08-4d78-a799-37335e7dc04e"],
Cell[32085, 914, 116, 2, 34, "Output",ExpressionUUID->"1df0a098-128c-4026-aaa6-dcae4c746a6d"],
Cell[32204, 918, 116, 2, 34, "Output",ExpressionUUID->"dfb7474f-1e1f-4fb2-9a3d-60de6ad4c883"],
Cell[32323, 922, 292, 7, 28, "MSG",ExpressionUUID->"3040c644-fb40-4f8c-b5b7-8462021729a8"],
Cell[32618, 931, 188, 5, 34, "Output",ExpressionUUID->"694c05ee-05e2-4718-9563-466165d9cf8d"],
Cell[32809, 938, 292, 7, 28, "MSG",ExpressionUUID->"006f9bd6-8663-4e20-a1c4-c66ef59ca456"],
Cell[33104, 947, 188, 5, 34, "Output",ExpressionUUID->"516f784f-cc54-44bf-9c00-aade99cfed9a"],
Cell[33295, 954, 158, 4, 34, "Output",ExpressionUUID->"35e6fc08-85ea-40c0-a7d1-ad7730622272"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33490, 963, 788, 24, 94, "Input",ExpressionUUID->"51c0198b-2bc6-4bf2-904f-a0d699a565ec"],
Cell[34281, 989, 116, 2, 34, "Output",ExpressionUUID->"330c3c1b-1e16-4263-85b8-740a78eb2b75"]
}, Open  ]],
Cell[34412, 994, 2007, 30, 288, "Text",ExpressionUUID->"8755a9ab-5cdd-497d-aa63-01391e09ad51"],
Cell[CellGroupData[{
Cell[36444, 1028, 8104, 231, 829, "Input",ExpressionUUID->"fb6d273a-a83e-489a-84db-1f7829446f70"],
Cell[CellGroupData[{
Cell[44573, 1263, 156, 1, 24, "Print",ExpressionUUID->"88b6d6b1-a079-47e0-9205-ef03af678236"],
Cell[44732, 1266, 124, 0, 24, "Print",ExpressionUUID->"049c0a23-9db5-47a3-979c-76424e519ab6"],
Cell[44859, 1268, 108, 0, 24, "Print",ExpressionUUID->"cf1781a4-feba-4d75-a716-337741ce6278"]
}, Open  ]],
Cell[44982, 1271, 291, 7, 28, "MSG",ExpressionUUID->"5ef49ddb-c874-40c2-a171-bdc24ef306f8"],
Cell[45276, 1280, 116, 0, 24, "Print",ExpressionUUID->"73075ea2-bdc7-4e6a-8b70-7d22ec16a12a"],
Cell[45395, 1282, 1379, 44, 57, "Output",ExpressionUUID->"d5d4b173-825c-4d6c-8801-9294dae210fc"],
Cell[46777, 1328, 211, 2, 24, "Print",ExpressionUUID->"7a55b4be-9929-43c8-b0ef-c02b9f368ac2"]
}, Open  ]],
Cell[47003, 1333, 2173, 32, 242, "Text",ExpressionUUID->"5706a462-e8fb-4c7c-8f76-2ca8b82242e4"],
Cell[CellGroupData[{
Cell[49201, 1369, 10064, 274, 997, "Input",ExpressionUUID->"02ba36df-f933-4c7f-8c5d-81bf73f07080"],
Cell[CellGroupData[{
Cell[59290, 1647, 405, 11, 24, "Print",ExpressionUUID->"b2a1b1fb-33b6-4174-8026-a3a1c2cfe517"],
Cell[59698, 1660, 397, 11, 24, "Print",ExpressionUUID->"3495a3a1-7573-496c-bcd5-9d0b3cb303f2"],
Cell[60098, 1673, 407, 11, 24, "Print",ExpressionUUID->"234a90a0-bfff-4702-858f-6769bd6b1117"],
Cell[60508, 1686, 242, 5, 24, "Print",ExpressionUUID->"8deb2fe3-605d-44e3-a48f-b20bdf710268"],
Cell[60753, 1693, 284, 6, 24, "Print",ExpressionUUID->"4b9d76ef-b25a-454f-aa25-9af64fdf772d"],
Cell[61040, 1701, 268, 5, 24, "Print",ExpressionUUID->"707acb73-434c-4ea6-9280-58b759d1f4ce"]
}, Open  ]]
}, Open  ]],
Cell[61335, 1710, 967, 14, 219, "Text",ExpressionUUID->"b2d9cf92-5afc-40e2-b32d-729ef812a89a"],
Cell[62305, 1726, 81, 0, 30, "Input",ExpressionUUID->"2901be24-472e-4cb0-944e-8b45125ec2c6"],
Cell[CellGroupData[{
Cell[62411, 1730, 72, 0, 30, "Input",ExpressionUUID->"fe18ed6d-e126-411e-b725-14993cbf5d90"],
Cell[62486, 1732, 1269, 42, 49, "Output",ExpressionUUID->"26fe5e60-a90f-46ea-b5cc-7ac4c050a742"],
Cell[63758, 1776, 405, 14, 34, "Output",ExpressionUUID->"cbd445f7-f3ed-470f-9333-5b3f7abb828d"],
Cell[64166, 1792, 691, 23, 63, "Output",ExpressionUUID->"4c80a8de-b2b3-4a9f-a54e-464e2fa34026"],
Cell[64860, 1817, 34052, 624, 248, "Output",ExpressionUUID->"e851dab8-a832-48c6-892b-c8e5945f4302"],
Cell[98915, 2443, 779, 29, 79, "Output",ExpressionUUID->"f4b98bac-ffb3-4a9b-83ed-ef48df775b90"],
Cell[99697, 2474, 32880, 604, 248, "Output",ExpressionUUID->"9f316f03-3570-4c62-bd62-b311f37f2692"]
}, Open  ]],
Cell[132592, 3081, 3253, 59, 875, "Text",ExpressionUUID->"9fb4ba52-2b19-46cd-97b4-cb455c837087"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135882, 3145, 172, 3, 85, "Subtitle",ExpressionUUID->"12dcca7b-b564-452c-b230-4c39aa45a808"],
Cell[136057, 3150, 5847, 101, 1399, "Text",ExpressionUUID->"4e94805a-39ed-4ca1-8aa5-3d8625e3fc94"],
Cell[CellGroupData[{
Cell[141929, 3255, 4278, 111, 577, "Input",ExpressionUUID->"de888bb6-098b-40ca-ab53-2b01e606ed57"],
Cell[146210, 3368, 1721, 60, 135, "Output",ExpressionUUID->"3eb412fe-9a80-4a03-bb26-a998f55ecd6f"],
Cell[147934, 3430, 3581, 106, 127, "Output",ExpressionUUID->"b58b94ab-8c01-4668-832f-a7b5007ffad4"],
Cell[151518, 3538, 1609, 48, 151, "Output",ExpressionUUID->"3ce8ee92-ed98-4c48-beda-9d13076ce21a"]
}, Open  ]],
Cell[153142, 3589, 2156, 35, 519, "Text",ExpressionUUID->"34c16f53-95cb-4829-bba3-2fe232a19f8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155335, 3629, 92, 0, 69, "Chapter",ExpressionUUID->"086f5ee0-472a-4674-a56a-719e39e27315"],
Cell[155430, 3631, 6592, 103, 1300, "Text",ExpressionUUID->"7c28aa83-36e9-4c5c-aba7-2b5f2d09565c"],
Cell[CellGroupData[{
Cell[162047, 3738, 8142, 233, 1051, "Input",ExpressionUUID->"1703d620-713d-4aa1-a006-584067c0a73a"],
Cell[CellGroupData[{
Cell[170214, 3975, 417, 11, 24, "Print",ExpressionUUID->"15ff9162-9aaf-491e-8a64-4f0a103267bc"],
Cell[170634, 3988, 197, 2, 24, "Print",ExpressionUUID->"2de33b2f-d193-4e2d-be0b-3ed2820f0cbb"],
Cell[170834, 3992, 159, 2, 24, "Print",ExpressionUUID->"6c4f87bd-430d-46bd-b2e1-94de0ddb9b31"],
Cell[170996, 3996, 154, 2, 24, "Print",ExpressionUUID->"d840778b-a89b-4c80-9e04-08ee2b625265"]
}, Open  ]],
Cell[171165, 4001, 845, 29, 117, "Output",ExpressionUUID->"903c0d34-31e0-45ea-bdef-037b227c6f66"]
}, Open  ]],
Cell[172025, 4033, 1594, 53, 73, "Input",ExpressionUUID->"ebcbce8f-4f21-406f-ae87-89eb7268c94f"],
Cell[173622, 4088, 7779, 231, 766, "Input",ExpressionUUID->"37512cbb-304e-4cc0-916d-6f5134f1c5d5"],
Cell[181404, 4321, 210, 3, 58, "Text",ExpressionUUID->"1044154e-b2fd-4eb1-b156-bfb8af727758"],
Cell[CellGroupData[{
Cell[181639, 4328, 144, 1, 44, "Print",ExpressionUUID->"0827ea61-ff13-4c2e-922b-7ee82e23ca8c"],
Cell[181786, 4331, 138, 1, 44, "Print",ExpressionUUID->"433e9d44-280d-452c-b172-e22911b0f8c6"]
}, Open  ]],
Cell[181939, 4335, 753, 24, 113, "Output",ExpressionUUID->"6655e170-458c-4826-a141-65f56e4462c5"],
Cell[182695, 4361, 142, 1, 44, "Print",ExpressionUUID->"3b9ae0df-fbe8-4c6a-bb23-5e14f81150f3"],
Cell[182840, 4364, 799, 26, 113, "Output",ExpressionUUID->"74cc30bc-d148-4838-aadd-96642c14df63"],
Cell[183642, 4392, 132, 0, 44, "Print",ExpressionUUID->"5e321369-6b80-4f19-bea7-50a189e29a82"],
Cell[183777, 4394, 653, 20, 97, "Output",ExpressionUUID->"8dd3117a-acc3-4847-bd2f-8c52479b8c6b"],
Cell[184433, 4416, 146, 1, 44, "Print",ExpressionUUID->"cf928d5f-ce8f-414a-9c12-1f75ffd45111"],
Cell[184582, 4419, 653, 20, 97, "Output",ExpressionUUID->"81737eef-684b-456c-957a-79f043ae2986"],
Cell[185238, 4441, 161, 2, 24, "Print",ExpressionUUID->"6c81e0cc-8ad3-42a3-aad2-b6278cbc77da"],
Cell[185402, 4445, 81, 0, 30, "Input",ExpressionUUID->"8b403f5f-3229-451b-ab3e-00be7dff81e4"],
Cell[CellGroupData[{
Cell[185508, 4449, 11454, 304, 1203, "Input",ExpressionUUID->"fad13a1a-d2af-4bf6-b7a0-d010500213e9"],
Cell[CellGroupData[{
Cell[196987, 4757, 417, 11, 24, "Print",ExpressionUUID->"b798f22f-971c-4957-b1a5-f1af4905dd5d"],
Cell[197407, 4770, 203, 2, 24, "Print",ExpressionUUID->"c701204f-db32-42d8-a17e-25f40a3b696b"],
Cell[197613, 4774, 202, 2, 24, "Print",ExpressionUUID->"ae4fecc8-be1a-444d-a34c-9d9ac8ef5d6a"],
Cell[197818, 4778, 131, 0, 24, "Print",ExpressionUUID->"c86adb37-c966-4596-875b-5f9dde94edf6"]
}, Open  ]],
Cell[197964, 4781, 1689, 60, 237, "Output",ExpressionUUID->"5d36f01b-8081-4d90-b9ec-d6662bae4dc3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199702, 4847, 165, 3, 85, "Subtitle",ExpressionUUID->"338c3d03-2532-495b-8109-59b91e78ff85"],
Cell[199870, 4852, 110, 2, 30, "Input",ExpressionUUID->"4a99d705-259e-4e09-82f7-e6b61d5572f3"],
Cell[199983, 4856, 71, 0, 35, "Text",ExpressionUUID->"85b004e0-9e9d-4a16-9a66-92f03c8b6d8c"],
Cell[200057, 4858, 81, 0, 30, "Input",ExpressionUUID->"e7a74fd3-212e-48fa-b7e3-c1f1a07cffaf"],
Cell[200141, 4860, 81, 0, 30, "Input",ExpressionUUID->"47c12212-a088-412e-b3d8-7b0c855320ed"],
Cell[200225, 4862, 81, 0, 30, "Input",ExpressionUUID->"c50535fe-2d8b-4751-a731-57bf24602800"],
Cell[200309, 4864, 81, 0, 30, "Input",ExpressionUUID->"1f90dcc0-f712-46a5-af89-a47f055e0abf"],
Cell[200393, 4866, 81, 0, 30, "Input",ExpressionUUID->"dbf8abe4-83d6-4104-96f9-7227a14a7946"],
Cell[200477, 4868, 81, 0, 30, "Input",ExpressionUUID->"cca7c313-ae75-4a22-b07b-cba3b031a309"],
Cell[200561, 4870, 81, 0, 30, "Input",ExpressionUUID->"af2ee66c-3dbb-4dab-8f66-58515c5ab1ca"],
Cell[200645, 4872, 81, 0, 30, "Input",ExpressionUUID->"4319e70c-4d49-4a1f-af44-f9a9da085702"],
Cell[200729, 4874, 81, 0, 30, "Input",ExpressionUUID->"b82fe372-9ded-4374-ad16-dab0a6111cf4"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

